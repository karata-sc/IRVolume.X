

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 27 15:40:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1769
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1769 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0110                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011C                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  011F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019D                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  020E                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0216                     	;# 
   192  0216                     	;# 
   193  0217                     	;# 
   194  0217                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0298                     	;# 
   207  0298                     	;# 
   208  0299                     	;# 
   209  029A                     	;# 
   210  029B                     	;# 
   211  029E                     	;# 
   212  030C                     	;# 
   213  030D                     	;# 
   214  030E                     	;# 
   215  031B                     	;# 
   216  031C                     	;# 
   217  031D                     	;# 
   218  031E                     	;# 
   219  031F                     	;# 
   220  038C                     	;# 
   221  038D                     	;# 
   222  038E                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  0397                     	;# 
   230  0398                     	;# 
   231  0399                     	;# 
   232  039B                     	;# 
   233  039C                     	;# 
   234  039D                     	;# 
   235  039E                     	;# 
   236  039F                     	;# 
   237  040E                     	;# 
   238  0413                     	;# 
   239  0413                     	;# 
   240  0414                     	;# 
   241  0414                     	;# 
   242  0415                     	;# 
   243  0416                     	;# 
   244  0417                     	;# 
   245  0418                     	;# 
   246  041A                     	;# 
   247  041A                     	;# 
   248  041B                     	;# 
   249  041B                     	;# 
   250  041C                     	;# 
   251  041D                     	;# 
   252  041E                     	;# 
   253  041F                     	;# 
   254  0493                     	;# 
   255  0493                     	;# 
   256  0494                     	;# 
   257  0495                     	;# 
   258  0496                     	;# 
   259  049A                     	;# 
   260  049A                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049D                     	;# 
   264  050F                     	;# 
   265  0510                     	;# 
   266  0511                     	;# 
   267  0512                     	;# 
   268  0513                     	;# 
   269  0514                     	;# 
   270  0515                     	;# 
   271  0516                     	;# 
   272  0590                     	;# 
   273  0591                     	;# 
   274  0592                     	;# 
   275  0592                     	;# 
   276  0592                     	;# 
   277  0593                     	;# 
   278  0593                     	;# 
   279  0594                     	;# 
   280  0595                     	;# 
   281  0595                     	;# 
   282  0595                     	;# 
   283  0596                     	;# 
   284  0596                     	;# 
   285  0597                     	;# 
   286  0598                     	;# 
   287  0598                     	;# 
   288  0599                     	;# 
   289  059A                     	;# 
   290  059A                     	;# 
   291  0617                     	;# 
   292  0617                     	;# 
   293  0618                     	;# 
   294  0619                     	;# 
   295  061A                     	;# 
   296  061A                     	;# 
   297  061B                     	;# 
   298  061C                     	;# 
   299  068D                     	;# 
   300  068E                     	;# 
   301  068F                     	;# 
   302  0690                     	;# 
   303  0691                     	;# 
   304  0692                     	;# 
   305  0693                     	;# 
   306  0694                     	;# 
   307  0695                     	;# 
   308  0696                     	;# 
   309  0697                     	;# 
   310  0698                     	;# 
   311  0699                     	;# 
   312  069A                     	;# 
   313  069B                     	;# 
   314  069C                     	;# 
   315  069D                     	;# 
   316  069E                     	;# 
   317  069F                     	;# 
   318  070D                     	;# 
   319  070E                     	;# 
   320  070F                     	;# 
   321  0710                     	;# 
   322  0711                     	;# 
   323  0712                     	;# 
   324  0713                     	;# 
   325  0714                     	;# 
   326  0715                     	;# 
   327  0716                     	;# 
   328  0717                     	;# 
   329  0718                     	;# 
   330  0719                     	;# 
   331  071A                     	;# 
   332  071B                     	;# 
   333  071C                     	;# 
   334  071D                     	;# 
   335  071E                     	;# 
   336  071F                     	;# 
   337  0794                     	;# 
   338  0795                     	;# 
   339  0796                     	;# 
   340  0797                     	;# 
   341  0798                     	;# 
   342  0799                     	;# 
   343  079A                     	;# 
   344  079B                     	;# 
   345  079C                     	;# 
   346  079D                     	;# 
   347  079E                     	;# 
   348  079F                     	;# 
   349  0D8E                     	;# 
   350  0D8F                     	;# 
   351  0D90                     	;# 
   352  0D91                     	;# 
   353  0D91                     	;# 
   354  0D92                     	;# 
   355  0D93                     	;# 
   356  0D93                     	;# 
   357  0D94                     	;# 
   358  0D95                     	;# 
   359  0D95                     	;# 
   360  0D96                     	;# 
   361  0D97                     	;# 
   362  0D97                     	;# 
   363  0D98                     	;# 
   364  0D99                     	;# 
   365  0D99                     	;# 
   366  0D9A                     	;# 
   367  0D9B                     	;# 
   368  0D9C                     	;# 
   369  0D9C                     	;# 
   370  0D9D                     	;# 
   371  0D9D                     	;# 
   372  0D9E                     	;# 
   373  0D9F                     	;# 
   374  0DA0                     	;# 
   375  0DA1                     	;# 
   376  0DA1                     	;# 
   377  0DA2                     	;# 
   378  0DA3                     	;# 
   379  0DA3                     	;# 
   380  0DA4                     	;# 
   381  0DA5                     	;# 
   382  0DA5                     	;# 
   383  0DA6                     	;# 
   384  0DA7                     	;# 
   385  0DA7                     	;# 
   386  0DA8                     	;# 
   387  0DA9                     	;# 
   388  0DA9                     	;# 
   389  0DAA                     	;# 
   390  0DAB                     	;# 
   391  0DAC                     	;# 
   392  0DAC                     	;# 
   393  0DAD                     	;# 
   394  0DAD                     	;# 
   395  0DAE                     	;# 
   396  0DAF                     	;# 
   397  0DB0                     	;# 
   398  0E0F                     	;# 
   399  0E10                     	;# 
   400  0E11                     	;# 
   401  0E12                     	;# 
   402  0E13                     	;# 
   403  0E14                     	;# 
   404  0E15                     	;# 
   405  0E16                     	;# 
   406  0E17                     	;# 
   407  0E19                     	;# 
   408  0E19                     	;# 
   409  0E19                     	;# 
   410  0E1A                     	;# 
   411  0E1B                     	;# 
   412  0E1C                     	;# 
   413  0E1C                     	;# 
   414  0E1C                     	;# 
   415  0E1D                     	;# 
   416  0E1E                     	;# 
   417  0E1F                     	;# 
   418  0E1F                     	;# 
   419  0E1F                     	;# 
   420  0E20                     	;# 
   421  0E21                     	;# 
   422  0E22                     	;# 
   423  0E24                     	;# 
   424  0E25                     	;# 
   425  0E28                     	;# 
   426  0E29                     	;# 
   427  0E2A                     	;# 
   428  0E2B                     	;# 
   429  0E2C                     	;# 
   430  0E2D                     	;# 
   431  0E2E                     	;# 
   432  0E2F                     	;# 
   433  0E30                     	;# 
   434  0E31                     	;# 
   435  0E32                     	;# 
   436  0E33                     	;# 
   437  0E34                     	;# 
   438  0E35                     	;# 
   439  0E90                     	;# 
   440  0E91                     	;# 
   441  0E92                     	;# 
   442  0E94                     	;# 
   443  0E95                     	;# 
   444  0E9C                     	;# 
   445  0E9D                     	;# 
   446  0E9E                     	;# 
   447  0E9F                     	;# 
   448  0EA0                     	;# 
   449  0EA1                     	;# 
   450  0EA2                     	;# 
   451  0EA3                     	;# 
   452  0EA4                     	;# 
   453  0EA5                     	;# 
   454  0EA6                     	;# 
   455  0EA7                     	;# 
   456  0F0F                     	;# 
   457  0F10                     	;# 
   458  0F11                     	;# 
   459  0F12                     	;# 
   460  0F13                     	;# 
   461  0F14                     	;# 
   462  0F15                     	;# 
   463  0F16                     	;# 
   464  0F17                     	;# 
   465  0F18                     	;# 
   466  0F19                     	;# 
   467  0F1A                     	;# 
   468  0F1B                     	;# 
   469  0F1C                     	;# 
   470  0F1D                     	;# 
   471  0F1E                     	;# 
   472  0F1F                     	;# 
   473  0F20                     	;# 
   474  0F21                     	;# 
   475  0F22                     	;# 
   476  0F23                     	;# 
   477  0F24                     	;# 
   478  0F25                     	;# 
   479  0F26                     	;# 
   480  0F27                     	;# 
   481  0F28                     	;# 
   482  0F29                     	;# 
   483  0F2A                     	;# 
   484  0F2B                     	;# 
   485  0F2C                     	;# 
   486  0F2D                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000D                     	;# 
   512  000E                     	;# 
   513  0011                     	;# 
   514  0012                     	;# 
   515  0013                     	;# 
   516  0014                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  001D                     	;# 
   529  001E                     	;# 
   530  001F                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  008E                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0094                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0098                     	;# 
   542  0099                     	;# 
   543  009A                     	;# 
   544  009B                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  010C                     	;# 
   551  010D                     	;# 
   552  010E                     	;# 
   553  010F                     	;# 
   554  0110                     	;# 
   555  0111                     	;# 
   556  0112                     	;# 
   557  0113                     	;# 
   558  0114                     	;# 
   559  0115                     	;# 
   560  0116                     	;# 
   561  0117                     	;# 
   562  0118                     	;# 
   563  0119                     	;# 
   564  011A                     	;# 
   565  011B                     	;# 
   566  011C                     	;# 
   567  011D                     	;# 
   568  011E                     	;# 
   569  011F                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  018E                     	;# 
   573  0191                     	;# 
   574  0191                     	;# 
   575  0192                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0194                     	;# 
   579  0195                     	;# 
   580  0196                     	;# 
   581  0197                     	;# 
   582  0199                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019C                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  020C                     	;# 
   608  020D                     	;# 
   609  020E                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  021D                     	;# 
   627  021E                     	;# 
   628  021F                     	;# 
   629  028C                     	;# 
   630  028D                     	;# 
   631  028E                     	;# 
   632  0291                     	;# 
   633  0291                     	;# 
   634  0292                     	;# 
   635  0293                     	;# 
   636  0294                     	;# 
   637  0298                     	;# 
   638  0298                     	;# 
   639  0299                     	;# 
   640  029A                     	;# 
   641  029B                     	;# 
   642  029E                     	;# 
   643  030C                     	;# 
   644  030D                     	;# 
   645  030E                     	;# 
   646  031B                     	;# 
   647  031C                     	;# 
   648  031D                     	;# 
   649  031E                     	;# 
   650  031F                     	;# 
   651  038C                     	;# 
   652  038D                     	;# 
   653  038E                     	;# 
   654  0391                     	;# 
   655  0392                     	;# 
   656  0393                     	;# 
   657  0394                     	;# 
   658  0395                     	;# 
   659  0396                     	;# 
   660  0397                     	;# 
   661  0398                     	;# 
   662  0399                     	;# 
   663  039B                     	;# 
   664  039C                     	;# 
   665  039D                     	;# 
   666  039E                     	;# 
   667  039F                     	;# 
   668  040E                     	;# 
   669  0413                     	;# 
   670  0413                     	;# 
   671  0414                     	;# 
   672  0414                     	;# 
   673  0415                     	;# 
   674  0416                     	;# 
   675  0417                     	;# 
   676  0418                     	;# 
   677  041A                     	;# 
   678  041A                     	;# 
   679  041B                     	;# 
   680  041B                     	;# 
   681  041C                     	;# 
   682  041D                     	;# 
   683  041E                     	;# 
   684  041F                     	;# 
   685  0493                     	;# 
   686  0493                     	;# 
   687  0494                     	;# 
   688  0495                     	;# 
   689  0496                     	;# 
   690  049A                     	;# 
   691  049A                     	;# 
   692  049B                     	;# 
   693  049C                     	;# 
   694  049D                     	;# 
   695  050F                     	;# 
   696  0510                     	;# 
   697  0511                     	;# 
   698  0512                     	;# 
   699  0513                     	;# 
   700  0514                     	;# 
   701  0515                     	;# 
   702  0516                     	;# 
   703  0590                     	;# 
   704  0591                     	;# 
   705  0592                     	;# 
   706  0592                     	;# 
   707  0592                     	;# 
   708  0593                     	;# 
   709  0593                     	;# 
   710  0594                     	;# 
   711  0595                     	;# 
   712  0595                     	;# 
   713  0595                     	;# 
   714  0596                     	;# 
   715  0596                     	;# 
   716  0597                     	;# 
   717  0598                     	;# 
   718  0598                     	;# 
   719  0599                     	;# 
   720  059A                     	;# 
   721  059A                     	;# 
   722  0617                     	;# 
   723  0617                     	;# 
   724  0618                     	;# 
   725  0619                     	;# 
   726  061A                     	;# 
   727  061A                     	;# 
   728  061B                     	;# 
   729  061C                     	;# 
   730  068D                     	;# 
   731  068E                     	;# 
   732  068F                     	;# 
   733  0690                     	;# 
   734  0691                     	;# 
   735  0692                     	;# 
   736  0693                     	;# 
   737  0694                     	;# 
   738  0695                     	;# 
   739  0696                     	;# 
   740  0697                     	;# 
   741  0698                     	;# 
   742  0699                     	;# 
   743  069A                     	;# 
   744  069B                     	;# 
   745  069C                     	;# 
   746  069D                     	;# 
   747  069E                     	;# 
   748  069F                     	;# 
   749  070D                     	;# 
   750  070E                     	;# 
   751  070F                     	;# 
   752  0710                     	;# 
   753  0711                     	;# 
   754  0712                     	;# 
   755  0713                     	;# 
   756  0714                     	;# 
   757  0715                     	;# 
   758  0716                     	;# 
   759  0717                     	;# 
   760  0718                     	;# 
   761  0719                     	;# 
   762  071A                     	;# 
   763  071B                     	;# 
   764  071C                     	;# 
   765  071D                     	;# 
   766  071E                     	;# 
   767  071F                     	;# 
   768  0794                     	;# 
   769  0795                     	;# 
   770  0796                     	;# 
   771  0797                     	;# 
   772  0798                     	;# 
   773  0799                     	;# 
   774  079A                     	;# 
   775  079B                     	;# 
   776  079C                     	;# 
   777  079D                     	;# 
   778  079E                     	;# 
   779  079F                     	;# 
   780  0D8E                     	;# 
   781  0D8F                     	;# 
   782  0D90                     	;# 
   783  0D91                     	;# 
   784  0D91                     	;# 
   785  0D92                     	;# 
   786  0D93                     	;# 
   787  0D93                     	;# 
   788  0D94                     	;# 
   789  0D95                     	;# 
   790  0D95                     	;# 
   791  0D96                     	;# 
   792  0D97                     	;# 
   793  0D97                     	;# 
   794  0D98                     	;# 
   795  0D99                     	;# 
   796  0D99                     	;# 
   797  0D9A                     	;# 
   798  0D9B                     	;# 
   799  0D9C                     	;# 
   800  0D9C                     	;# 
   801  0D9D                     	;# 
   802  0D9D                     	;# 
   803  0D9E                     	;# 
   804  0D9F                     	;# 
   805  0DA0                     	;# 
   806  0DA1                     	;# 
   807  0DA1                     	;# 
   808  0DA2                     	;# 
   809  0DA3                     	;# 
   810  0DA3                     	;# 
   811  0DA4                     	;# 
   812  0DA5                     	;# 
   813  0DA5                     	;# 
   814  0DA6                     	;# 
   815  0DA7                     	;# 
   816  0DA7                     	;# 
   817  0DA8                     	;# 
   818  0DA9                     	;# 
   819  0DA9                     	;# 
   820  0DAA                     	;# 
   821  0DAB                     	;# 
   822  0DAC                     	;# 
   823  0DAC                     	;# 
   824  0DAD                     	;# 
   825  0DAD                     	;# 
   826  0DAE                     	;# 
   827  0DAF                     	;# 
   828  0DB0                     	;# 
   829  0E0F                     	;# 
   830  0E10                     	;# 
   831  0E11                     	;# 
   832  0E12                     	;# 
   833  0E13                     	;# 
   834  0E14                     	;# 
   835  0E15                     	;# 
   836  0E16                     	;# 
   837  0E17                     	;# 
   838  0E19                     	;# 
   839  0E19                     	;# 
   840  0E19                     	;# 
   841  0E1A                     	;# 
   842  0E1B                     	;# 
   843  0E1C                     	;# 
   844  0E1C                     	;# 
   845  0E1C                     	;# 
   846  0E1D                     	;# 
   847  0E1E                     	;# 
   848  0E1F                     	;# 
   849  0E1F                     	;# 
   850  0E1F                     	;# 
   851  0E20                     	;# 
   852  0E21                     	;# 
   853  0E22                     	;# 
   854  0E24                     	;# 
   855  0E25                     	;# 
   856  0E28                     	;# 
   857  0E29                     	;# 
   858  0E2A                     	;# 
   859  0E2B                     	;# 
   860  0E2C                     	;# 
   861  0E2D                     	;# 
   862  0E2E                     	;# 
   863  0E2F                     	;# 
   864  0E30                     	;# 
   865  0E31                     	;# 
   866  0E32                     	;# 
   867  0E33                     	;# 
   868  0E34                     	;# 
   869  0E35                     	;# 
   870  0E90                     	;# 
   871  0E91                     	;# 
   872  0E92                     	;# 
   873  0E94                     	;# 
   874  0E95                     	;# 
   875  0E9C                     	;# 
   876  0E9D                     	;# 
   877  0E9E                     	;# 
   878  0E9F                     	;# 
   879  0EA0                     	;# 
   880  0EA1                     	;# 
   881  0EA2                     	;# 
   882  0EA3                     	;# 
   883  0EA4                     	;# 
   884  0EA5                     	;# 
   885  0EA6                     	;# 
   886  0EA7                     	;# 
   887  0F0F                     	;# 
   888  0F10                     	;# 
   889  0F11                     	;# 
   890  0F12                     	;# 
   891  0F13                     	;# 
   892  0F14                     	;# 
   893  0F15                     	;# 
   894  0F16                     	;# 
   895  0F17                     	;# 
   896  0F18                     	;# 
   897  0F19                     	;# 
   898  0F1A                     	;# 
   899  0F1B                     	;# 
   900  0F1C                     	;# 
   901  0F1D                     	;# 
   902  0F1E                     	;# 
   903  0F1F                     	;# 
   904  0F20                     	;# 
   905  0F21                     	;# 
   906  0F22                     	;# 
   907  0F23                     	;# 
   908  0F24                     	;# 
   909  0F25                     	;# 
   910  0F26                     	;# 
   911  0F27                     	;# 
   912  0F28                     	;# 
   913  0F29                     	;# 
   914  0F2A                     	;# 
   915  0F2B                     	;# 
   916  0F2C                     	;# 
   917  0F2D                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000D                     	;# 
   943  000E                     	;# 
   944  0011                     	;# 
   945  0012                     	;# 
   946  0013                     	;# 
   947  0014                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001A                     	;# 
   956  001B                     	;# 
   957  001B                     	;# 
   958  001C                     	;# 
   959  001D                     	;# 
   960  001E                     	;# 
   961  001F                     	;# 
   962  008C                     	;# 
   963  008D                     	;# 
   964  008E                     	;# 
   965  0091                     	;# 
   966  0092                     	;# 
   967  0093                     	;# 
   968  0094                     	;# 
   969  0095                     	;# 
   970  0096                     	;# 
   971  0097                     	;# 
   972  0098                     	;# 
   973  0099                     	;# 
   974  009A                     	;# 
   975  009B                     	;# 
   976  009B                     	;# 
   977  009C                     	;# 
   978  009D                     	;# 
   979  009E                     	;# 
   980  009F                     	;# 
   981  010C                     	;# 
   982  010D                     	;# 
   983  010E                     	;# 
   984  010F                     	;# 
   985  0110                     	;# 
   986  0111                     	;# 
   987  0112                     	;# 
   988  0113                     	;# 
   989  0114                     	;# 
   990  0115                     	;# 
   991  0116                     	;# 
   992  0117                     	;# 
   993  0118                     	;# 
   994  0119                     	;# 
   995  011A                     	;# 
   996  011B                     	;# 
   997  011C                     	;# 
   998  011D                     	;# 
   999  011E                     	;# 
  1000  011F                     	;# 
  1001  018C                     	;# 
  1002  018D                     	;# 
  1003  018E                     	;# 
  1004  0191                     	;# 
  1005  0191                     	;# 
  1006  0192                     	;# 
  1007  0193                     	;# 
  1008  0193                     	;# 
  1009  0194                     	;# 
  1010  0195                     	;# 
  1011  0196                     	;# 
  1012  0197                     	;# 
  1013  0199                     	;# 
  1014  0199                     	;# 
  1015  0199                     	;# 
  1016  019A                     	;# 
  1017  019A                     	;# 
  1018  019A                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019C                     	;# 
  1026  019C                     	;# 
  1027  019D                     	;# 
  1028  019D                     	;# 
  1029  019D                     	;# 
  1030  019E                     	;# 
  1031  019E                     	;# 
  1032  019E                     	;# 
  1033  019F                     	;# 
  1034  019F                     	;# 
  1035  019F                     	;# 
  1036  019F                     	;# 
  1037  019F                     	;# 
  1038  020C                     	;# 
  1039  020D                     	;# 
  1040  020E                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  0212                     	;# 
  1044  0212                     	;# 
  1045  0213                     	;# 
  1046  0213                     	;# 
  1047  0214                     	;# 
  1048  0214                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0215                     	;# 
  1052  0215                     	;# 
  1053  0216                     	;# 
  1054  0216                     	;# 
  1055  0217                     	;# 
  1056  0217                     	;# 
  1057  021D                     	;# 
  1058  021E                     	;# 
  1059  021F                     	;# 
  1060  028C                     	;# 
  1061  028D                     	;# 
  1062  028E                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0298                     	;# 
  1069  0298                     	;# 
  1070  0299                     	;# 
  1071  029A                     	;# 
  1072  029B                     	;# 
  1073  029E                     	;# 
  1074  030C                     	;# 
  1075  030D                     	;# 
  1076  030E                     	;# 
  1077  031B                     	;# 
  1078  031C                     	;# 
  1079  031D                     	;# 
  1080  031E                     	;# 
  1081  031F                     	;# 
  1082  038C                     	;# 
  1083  038D                     	;# 
  1084  038E                     	;# 
  1085  0391                     	;# 
  1086  0392                     	;# 
  1087  0393                     	;# 
  1088  0394                     	;# 
  1089  0395                     	;# 
  1090  0396                     	;# 
  1091  0397                     	;# 
  1092  0398                     	;# 
  1093  0399                     	;# 
  1094  039B                     	;# 
  1095  039C                     	;# 
  1096  039D                     	;# 
  1097  039E                     	;# 
  1098  039F                     	;# 
  1099  040E                     	;# 
  1100  0413                     	;# 
  1101  0413                     	;# 
  1102  0414                     	;# 
  1103  0414                     	;# 
  1104  0415                     	;# 
  1105  0416                     	;# 
  1106  0417                     	;# 
  1107  0418                     	;# 
  1108  041A                     	;# 
  1109  041A                     	;# 
  1110  041B                     	;# 
  1111  041B                     	;# 
  1112  041C                     	;# 
  1113  041D                     	;# 
  1114  041E                     	;# 
  1115  041F                     	;# 
  1116  0493                     	;# 
  1117  0493                     	;# 
  1118  0494                     	;# 
  1119  0495                     	;# 
  1120  0496                     	;# 
  1121  049A                     	;# 
  1122  049A                     	;# 
  1123  049B                     	;# 
  1124  049C                     	;# 
  1125  049D                     	;# 
  1126  050F                     	;# 
  1127  0510                     	;# 
  1128  0511                     	;# 
  1129  0512                     	;# 
  1130  0513                     	;# 
  1131  0514                     	;# 
  1132  0515                     	;# 
  1133  0516                     	;# 
  1134  0590                     	;# 
  1135  0591                     	;# 
  1136  0592                     	;# 
  1137  0592                     	;# 
  1138  0592                     	;# 
  1139  0593                     	;# 
  1140  0593                     	;# 
  1141  0594                     	;# 
  1142  0595                     	;# 
  1143  0595                     	;# 
  1144  0595                     	;# 
  1145  0596                     	;# 
  1146  0596                     	;# 
  1147  0597                     	;# 
  1148  0598                     	;# 
  1149  0598                     	;# 
  1150  0599                     	;# 
  1151  059A                     	;# 
  1152  059A                     	;# 
  1153  0617                     	;# 
  1154  0617                     	;# 
  1155  0618                     	;# 
  1156  0619                     	;# 
  1157  061A                     	;# 
  1158  061A                     	;# 
  1159  061B                     	;# 
  1160  061C                     	;# 
  1161  068D                     	;# 
  1162  068E                     	;# 
  1163  068F                     	;# 
  1164  0690                     	;# 
  1165  0691                     	;# 
  1166  0692                     	;# 
  1167  0693                     	;# 
  1168  0694                     	;# 
  1169  0695                     	;# 
  1170  0696                     	;# 
  1171  0697                     	;# 
  1172  0698                     	;# 
  1173  0699                     	;# 
  1174  069A                     	;# 
  1175  069B                     	;# 
  1176  069C                     	;# 
  1177  069D                     	;# 
  1178  069E                     	;# 
  1179  069F                     	;# 
  1180  070D                     	;# 
  1181  070E                     	;# 
  1182  070F                     	;# 
  1183  0710                     	;# 
  1184  0711                     	;# 
  1185  0712                     	;# 
  1186  0713                     	;# 
  1187  0714                     	;# 
  1188  0715                     	;# 
  1189  0716                     	;# 
  1190  0717                     	;# 
  1191  0718                     	;# 
  1192  0719                     	;# 
  1193  071A                     	;# 
  1194  071B                     	;# 
  1195  071C                     	;# 
  1196  071D                     	;# 
  1197  071E                     	;# 
  1198  071F                     	;# 
  1199  0794                     	;# 
  1200  0795                     	;# 
  1201  0796                     	;# 
  1202  0797                     	;# 
  1203  0798                     	;# 
  1204  0799                     	;# 
  1205  079A                     	;# 
  1206  079B                     	;# 
  1207  079C                     	;# 
  1208  079D                     	;# 
  1209  079E                     	;# 
  1210  079F                     	;# 
  1211  0D8E                     	;# 
  1212  0D8F                     	;# 
  1213  0D90                     	;# 
  1214  0D91                     	;# 
  1215  0D91                     	;# 
  1216  0D92                     	;# 
  1217  0D93                     	;# 
  1218  0D93                     	;# 
  1219  0D94                     	;# 
  1220  0D95                     	;# 
  1221  0D95                     	;# 
  1222  0D96                     	;# 
  1223  0D97                     	;# 
  1224  0D97                     	;# 
  1225  0D98                     	;# 
  1226  0D99                     	;# 
  1227  0D99                     	;# 
  1228  0D9A                     	;# 
  1229  0D9B                     	;# 
  1230  0D9C                     	;# 
  1231  0D9C                     	;# 
  1232  0D9D                     	;# 
  1233  0D9D                     	;# 
  1234  0D9E                     	;# 
  1235  0D9F                     	;# 
  1236  0DA0                     	;# 
  1237  0DA1                     	;# 
  1238  0DA1                     	;# 
  1239  0DA2                     	;# 
  1240  0DA3                     	;# 
  1241  0DA3                     	;# 
  1242  0DA4                     	;# 
  1243  0DA5                     	;# 
  1244  0DA5                     	;# 
  1245  0DA6                     	;# 
  1246  0DA7                     	;# 
  1247  0DA7                     	;# 
  1248  0DA8                     	;# 
  1249  0DA9                     	;# 
  1250  0DA9                     	;# 
  1251  0DAA                     	;# 
  1252  0DAB                     	;# 
  1253  0DAC                     	;# 
  1254  0DAC                     	;# 
  1255  0DAD                     	;# 
  1256  0DAD                     	;# 
  1257  0DAE                     	;# 
  1258  0DAF                     	;# 
  1259  0DB0                     	;# 
  1260  0E0F                     	;# 
  1261  0E10                     	;# 
  1262  0E11                     	;# 
  1263  0E12                     	;# 
  1264  0E13                     	;# 
  1265  0E14                     	;# 
  1266  0E15                     	;# 
  1267  0E16                     	;# 
  1268  0E17                     	;# 
  1269  0E19                     	;# 
  1270  0E19                     	;# 
  1271  0E19                     	;# 
  1272  0E1A                     	;# 
  1273  0E1B                     	;# 
  1274  0E1C                     	;# 
  1275  0E1C                     	;# 
  1276  0E1C                     	;# 
  1277  0E1D                     	;# 
  1278  0E1E                     	;# 
  1279  0E1F                     	;# 
  1280  0E1F                     	;# 
  1281  0E1F                     	;# 
  1282  0E20                     	;# 
  1283  0E21                     	;# 
  1284  0E22                     	;# 
  1285  0E24                     	;# 
  1286  0E25                     	;# 
  1287  0E28                     	;# 
  1288  0E29                     	;# 
  1289  0E2A                     	;# 
  1290  0E2B                     	;# 
  1291  0E2C                     	;# 
  1292  0E2D                     	;# 
  1293  0E2E                     	;# 
  1294  0E2F                     	;# 
  1295  0E30                     	;# 
  1296  0E31                     	;# 
  1297  0E32                     	;# 
  1298  0E33                     	;# 
  1299  0E34                     	;# 
  1300  0E35                     	;# 
  1301  0E90                     	;# 
  1302  0E91                     	;# 
  1303  0E92                     	;# 
  1304  0E94                     	;# 
  1305  0E95                     	;# 
  1306  0E9C                     	;# 
  1307  0E9D                     	;# 
  1308  0E9E                     	;# 
  1309  0E9F                     	;# 
  1310  0EA0                     	;# 
  1311  0EA1                     	;# 
  1312  0EA2                     	;# 
  1313  0EA3                     	;# 
  1314  0EA4                     	;# 
  1315  0EA5                     	;# 
  1316  0EA6                     	;# 
  1317  0EA7                     	;# 
  1318  0F0F                     	;# 
  1319  0F10                     	;# 
  1320  0F11                     	;# 
  1321  0F12                     	;# 
  1322  0F13                     	;# 
  1323  0F14                     	;# 
  1324  0F15                     	;# 
  1325  0F16                     	;# 
  1326  0F17                     	;# 
  1327  0F18                     	;# 
  1328  0F19                     	;# 
  1329  0F1A                     	;# 
  1330  0F1B                     	;# 
  1331  0F1C                     	;# 
  1332  0F1D                     	;# 
  1333  0F1E                     	;# 
  1334  0F1F                     	;# 
  1335  0F20                     	;# 
  1336  0F21                     	;# 
  1337  0F22                     	;# 
  1338  0F23                     	;# 
  1339  0F24                     	;# 
  1340  0F25                     	;# 
  1341  0F26                     	;# 
  1342  0F27                     	;# 
  1343  0F28                     	;# 
  1344  0F29                     	;# 
  1345  0F2A                     	;# 
  1346  0F2B                     	;# 
  1347  0F2C                     	;# 
  1348  0F2D                     	;# 
  1349  0FE4                     	;# 
  1350  0FE5                     	;# 
  1351  0FE6                     	;# 
  1352  0FE7                     	;# 
  1353  0FE8                     	;# 
  1354  0FE9                     	;# 
  1355  0FEA                     	;# 
  1356  0FEB                     	;# 
  1357  0FED                     	;# 
  1358  0FEE                     	;# 
  1359  0FEF                     	;# 
  1360                           
  1361                           	psect	idataCOMMON
  1362  055E                     __pidataCOMMON:	
  1363                           
  1364                           ;initializer for _cnt_bit
  1365  055E  341F               	retlw	31
  1366  055F  3400               	retlw	0
  1367                           
  1368                           ;initializer for _vol
  1369  0560  347F               	retlw	127
  1370                           
  1371                           	psect	idataBANK0
  1372  0446                     __pidataBANK0:	
  1373                           
  1374                           ;initializer for _vol_lcd
  1375  0446  3416               	retlw	22
  1376  0447  3403               	retlw	3
  1377                           
  1378                           ;initializer for _Mute
  1379  0448  3456               	retlw	86
  1380  0449  346F               	retlw	111
  1381  044A  346C               	retlw	108
  1382  044B  3420               	retlw	32
  1383  044C  343A               	retlw	58
  1384  044D  3420               	retlw	32
  1385  044E  3420               	retlw	32
  1386  044F  344D               	retlw	77
  1387  0450  3455               	retlw	85
  1388  0451  3454               	retlw	84
  1389  0452  3445               	retlw	69
  1390  0453  3420               	retlw	32
  1391  0454  3420               	retlw	32
  1392  0455  3420               	retlw	32
  1393  0456  3420               	retlw	32
  1394  0457  3400               	retlw	0
  1395                           
  1396                           ;initializer for _Buffer
  1397  0458  3456               	retlw	86
  1398  0459  346F               	retlw	111
  1399  045A  346C               	retlw	108
  1400  045B  3420               	retlw	32
  1401  045C  343A               	retlw	58
  1402  045D  3420               	retlw	32
  1403  045E  3420               	retlw	32
  1404  045F  3478               	retlw	120
  1405  0460  3478               	retlw	120
  1406  0461  3478               	retlw	120
  1407  0462  3478               	retlw	120
  1408  0463  3478               	retlw	120
  1409  0464  3420               	retlw	32
  1410  0465  3464               	retlw	100
  1411  0466  3442               	retlw	66
  1412  0467  3400               	retlw	0
  1413                           
  1414                           ;initializer for _StMsg
  1415  0468  344C               	retlw	76
  1416  0469  344D               	retlw	77
  1417  046A  3431               	retlw	49
  1418  046B  3439               	retlw	57
  1419  046C  3437               	retlw	55
  1420  046D  3432               	retlw	50
  1421  046E  344D               	retlw	77
  1422  046F  3400               	retlw	0
  1423  0016                     _TMR1	set	22
  1424  000C                     _PORTAbits	set	12
  1425  0011                     _PIR1bits	set	17
  1426  0018                     _T1CONbits	set	24
  1427  0018                     _T1CON	set	24
  1428  000B                     _INTCONbits	set	11
  1429  000B                     _INTCON	set	11
  1430  000E                     _PORTCbits	set	14
  1431  0091                     _PIE1bits	set	145
  1432  0095                     _OPTION_REGbits	set	149
  1433  008E                     _TRISC	set	142
  1434  008D                     _TRISB	set	141
  1435  008C                     _TRISA	set	140
  1436  0097                     _WDTCON	set	151
  1437  0098                     _OSCTUNE	set	152
  1438  009A                     _OSCSTAT	set	154
  1439  0099                     _OSCCON	set	153
  1440  010E                     _LATC	set	270
  1441  010D                     _LATB	set	269
  1442  010C                     _LATA	set	268
  1443  018C                     _ANSELA	set	396
  1444  018D                     _ANSELB	set	397
  1445  018E                     _ANSELC	set	398
  1446  0211                     _SSP1BUF	set	529
  1447  0215                     _SSP1CON1	set	533
  1448  0214                     _SSP1STATbits	set	532
  1449  020E                     _WPUC	set	526
  1450  020C                     _WPUA	set	524
  1451  020D                     _WPUB	set	525
  1452  021D                     _BORCON	set	541
  1453  028E                     _ODCONC	set	654
  1454  028D                     _ODCONB	set	653
  1455  028C                     _ODCONA	set	652
  1456  030E                     _SLRCONC	set	782
  1457  030D                     _SLRCONB	set	781
  1458  030C                     _SLRCONA	set	780
  1459  0399                     _IOCCFbits	set	921
  1460  0393                     _IOCAFbits	set	915
  1461  0399                     _IOCCF	set	921
  1462  0398                     _IOCCNbits	set	920
  1463  0397                     _IOCCPbits	set	919
  1464  0393                     _IOCAF	set	915
  1465  0391                     _IOCAPbits	set	913
  1466  038E                     _INLVLC	set	910
  1467  038D                     _INLVLB	set	909
  1468  038C                     _INLVLA	set	908
  1469  0E22                     _SSPSSPPS	set	3618
  1470  0E20                     _SSPCLKPPS	set	3616
  1471  0E92                     _RA2PPS	set	3730
  1472  0EA5                     _RC5PPS	set	3749
  1473                           
  1474                           ; #config settings
  1475  0000                     
  1476                           	psect	cinit
  1477  0194                     start_initialization:	
  1478  0194                     __initialization:	
  1479                           
  1480                           ; Initialize objects allocated to COMMON
  1481  0194  305E               	movlw	low __pidataCOMMON
  1482  0195  0084               	movwf	4
  1483  0196  3085               	movlw	(high __pidataCOMMON)| (0+128)
  1484  0197  0085               	movwf	5
  1485  0198  3078               	movlw	low __pdataCOMMON
  1486  0199  0086               	movwf	6
  1487  019A  3000               	movlw	high __pdataCOMMON
  1488  019B  0087               	movwf	7
  1489  019C  3003               	movlw	3
  1490  019D  3185  2554  3181   	fcall	init_ram
  1491                           
  1492                           ; Initialize objects allocated to BANK0
  1493  01A0  3046               	movlw	low __pidataBANK0
  1494  01A1  0084               	movwf	4
  1495  01A2  3084               	movlw	(high __pidataBANK0)| (0+128)
  1496  01A3  0085               	movwf	5
  1497  01A4  3020               	movlw	low __pdataBANK0
  1498  01A5  0086               	movwf	6
  1499  01A6  3000               	movlw	high __pdataBANK0
  1500  01A7  0087               	movwf	7
  1501  01A8  302A               	movlw	42
  1502  01A9  3185  2554  3181   	fcall	init_ram
  1503                           
  1504                           ; Clear objects allocated to BANK0
  1505  01AC  01E2               	clrf	__pbssBANK0& (0+127)
  1506  01AD  01E3               	clrf	(__pbssBANK0+1)& (0+127)
  1507  01AE  01E4               	clrf	(__pbssBANK0+2)& (0+127)
  1508  01AF  01E5               	clrf	(__pbssBANK0+3)& (0+127)
  1509  01B0  01E6               	clrf	(__pbssBANK0+4)& (0+127)
  1510  01B1  01E7               	clrf	(__pbssBANK0+5)& (0+127)
  1511  01B2  01E8               	clrf	(__pbssBANK0+6)& (0+127)
  1512  01B3                     end_of_initialization:	
  1513                           ;End of C runtime variable initialization code
  1514                           
  1515  01B3                     __end_of__initialization:	
  1516  01B3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1517  01B4  0020               	movlb	0
  1518  01B5  3183  2B36         	ljmp	_main	;jump to C main() function
  1519                           
  1520                           	psect	dataCOMMON
  1521  0078                     __pdataCOMMON:	
  1522  0078                     _cnt_bit:	
  1523  0078                     	ds	2
  1524  007A                     _vol:	
  1525  007A                     	ds	1
  1526                           
  1527                           	psect	bssBANK0
  1528  0062                     __pbssBANK0:	
  1529  0062                     _state:	
  1530  0062                     	ds	2
  1531  0064                     _dataReg:	
  1532  0064                     	ds	1
  1533  0065                     _preReg4:	
  1534  0065                     	ds	1
  1535  0066                     _preReg3:	
  1536  0066                     	ds	1
  1537  0067                     _preReg2:	
  1538  0067                     	ds	1
  1539  0068                     _preReg1:	
  1540  0068                     	ds	1
  1541                           
  1542                           	psect	dataBANK0
  1543  0020                     __pdataBANK0:	
  1544  0020                     _vol_lcd:	
  1545  0020                     	ds	2
  1546  0022                     _Mute:	
  1547  0022                     	ds	16
  1548  0032                     _Buffer:	
  1549  0032                     	ds	16
  1550  0042                     _StMsg:	
  1551  0042                     	ds	8
  1552                           
  1553                           	psect	inittext
  1554  0554                     init_ram:	
  1555  0554  00FE               	movwf	btemp
  1556  0555                     initloop:	
  1557  0555  0012               	moviw fsr0++
  1558  0556  001E               	movwi fsr1++
  1559  0557  0BFE               	decfsz	btemp,f
  1560  0558  2D55               	goto	initloop
  1561  0559  3400               	retlw	0
  1562                           
  1563                           	psect	cstackCOMMON
  1564  0070                     __pcstackCOMMON:	
  1565  0070                     ?_PIN_MANAGER_Initialize:	
  1566  0070                     ?_OSCILLATOR_Initialize:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_WDT_Initialize:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_lcd_init:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_lcd_clear:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_lcd_str:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_lcd_cmd:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_UpVol:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ??_UpVol:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?_DownVol:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ??_DownVol:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?_SYSTEM_Initialize:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_main:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?_isr:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_lcd_data:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608                           
  1609                           ; 1 bytes @ 0x0
  1610  0070                     	ds	1
  1611  0071                     ??_isr:	
  1612                           
  1613                           ; 1 bytes @ 0x1
  1614  0071                     	ds	2
  1615  0073                     ??_PIN_MANAGER_Initialize:	
  1616  0073                     ??_OSCILLATOR_Initialize:	
  1617                           ; 1 bytes @ 0x3
  1618                           
  1619  0073                     ??_WDT_Initialize:	
  1620                           ; 1 bytes @ 0x3
  1621                           
  1622  0073                     ?_SetVol:	
  1623                           ; 1 bytes @ 0x3
  1624                           
  1625  0073                     ??_SYSTEM_Initialize:	
  1626                           ; 1 bytes @ 0x3
  1627                           
  1628  0073                     ?_lcd_out:	
  1629                           ; 1 bytes @ 0x3
  1630                           
  1631  0073                     ?___awdiv:	
  1632                           ; 1 bytes @ 0x3
  1633                           
  1634  0073                     ?___awmod:	
  1635                           ; 2 bytes @ 0x3
  1636                           
  1637  0073                     SetVol@vol_data:	
  1638                           ; 2 bytes @ 0x3
  1639                           
  1640  0073                     lcd_out@flag:	
  1641                           ; 1 bytes @ 0x3
  1642                           
  1643  0073                     ___awdiv@divisor:	
  1644                           ; 1 bytes @ 0x3
  1645                           
  1646  0073                     ___awmod@divisor:	
  1647                           ; 2 bytes @ 0x3
  1648                           
  1649                           
  1650                           ; 2 bytes @ 0x3
  1651  0073                     	ds	1
  1652  0074                     ??_SetVol:	
  1653  0074                     ??_lcd_out:	
  1654                           ; 1 bytes @ 0x4
  1655                           
  1656  0074                     SetVol@ch:	
  1657                           ; 1 bytes @ 0x4
  1658                           
  1659  0074                     lcd_out@code:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x4
  1664  0074                     	ds	1
  1665  0075                     ??_lcd_cmd:	
  1666  0075                     ??_lcd_data:	
  1667                           ; 1 bytes @ 0x5
  1668                           
  1669  0075                     ___awdiv@dividend:	
  1670                           ; 1 bytes @ 0x5
  1671                           
  1672  0075                     ___awmod@dividend:	
  1673                           ; 2 bytes @ 0x5
  1674                           
  1675                           
  1676                           ; 2 bytes @ 0x5
  1677  0075                     	ds	1
  1678  0076                     lcd_data@asci:	
  1679  0076                     lcd_cmd@cmd:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682                           
  1683                           ; 1 bytes @ 0x6
  1684  0076                     	ds	1
  1685  0077                     ??_lcd_clear:	
  1686  0077                     ??_lcd_str:	
  1687                           ; 1 bytes @ 0x7
  1688                           
  1689  0077                     ??___awdiv:	
  1690                           ; 1 bytes @ 0x7
  1691                           
  1692  0077                     ??___awmod:	
  1693                           ; 1 bytes @ 0x7
  1694                           
  1695                           
  1696                           ; 1 bytes @ 0x7
  1697  0077                     	ds	1
  1698                           
  1699                           	psect	cstackBANK0
  1700  004A                     __pcstackBANK0:	
  1701  004A                     ??_lcd_init:	
  1702  004A                     lcd_str@buf:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  004A                     ___awdiv@counter:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  004A                     ___awmod@counter:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711                           
  1712                           ; 1 bytes @ 0x0
  1713  004A                     	ds	1
  1714  004B                     ___awdiv@sign:	
  1715  004B                     ___awmod@sign:	
  1716                           ; 1 bytes @ 0x1
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0x1
  1720  004B                     	ds	1
  1721  004C                     ___awdiv@quotient:	
  1722                           
  1723                           ; 2 bytes @ 0x2
  1724  004C                     	ds	2
  1725  004E                     ?_itostring:	
  1726  004E                     itostring@digit:	
  1727                           ; 1 bytes @ 0x4
  1728                           
  1729                           
  1730                           ; 2 bytes @ 0x4
  1731  004E                     	ds	2
  1732  0050                     itostring@data:	
  1733                           
  1734                           ; 2 bytes @ 0x6
  1735  0050                     	ds	2
  1736  0052                     itostring@buffer:	
  1737                           
  1738                           ; 1 bytes @ 0x8
  1739  0052                     	ds	1
  1740  0053                     ??_itostring:	
  1741                           
  1742                           ; 1 bytes @ 0x9
  1743  0053                     	ds	2
  1744  0055                     itostring@flag3:	
  1745                           
  1746                           ; 2 bytes @ 0xB
  1747  0055                     	ds	2
  1748  0057                     itostring@flag2:	
  1749                           
  1750                           ; 2 bytes @ 0xD
  1751  0057                     	ds	2
  1752  0059                     itostring@x:	
  1753                           
  1754                           ; 2 bytes @ 0xF
  1755  0059                     	ds	2
  1756  005B                     itostring@flag1:	
  1757                           
  1758                           ; 2 bytes @ 0x11
  1759  005B                     	ds	2
  1760  005D                     itostring@flag4:	
  1761                           
  1762                           ; 2 bytes @ 0x13
  1763  005D                     	ds	2
  1764  005F                     itostring@i:	
  1765                           
  1766                           ; 2 bytes @ 0x15
  1767  005F                     	ds	2
  1768  0061                     ??_main:	
  1769                           
  1770                           ; 1 bytes @ 0x17
  1771  0061                     	ds	1
  1772                           
  1773                           	psect	maintext
  1774  0336                     __pmaintext:	
  1775 ;;
  1776 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1777 ;;
  1778 ;; *************** function _main *****************
  1779 ;; Defined at:
  1780 ;;		line 36 in file "main.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : B1F/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;Total ram usage:        1 bytes
  1799 ;; Hardware stack levels required when called:    5
  1800 ;; This function calls:
  1801 ;;		_SYSTEM_Initialize
  1802 ;;		_SetVol
  1803 ;;		_itostring
  1804 ;;		_lcd_clear
  1805 ;;		_lcd_cmd
  1806 ;;		_lcd_init
  1807 ;;		_lcd_str
  1808 ;; This function is called by:
  1809 ;;		Startup code after reset
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _main
  1815  0336                     _main:	
  1816  0336                     l1952:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1819                           
  1820                           
  1821                           ;main.c: 39:     SYSTEM_Initialize();
  1822  0336  3185  2542  3183   	fcall	_SYSTEM_Initialize
  1823  0339                     l1954:	
  1824                           
  1825                           ;main.c: 42:     RC5PPS = 0x12;
  1826  0339  3012               	movlw	18
  1827  033A  003D               	movlb	29	; select bank29
  1828  033B  00A5               	movwf	37	;volatile
  1829  033C                     l1956:	
  1830                           
  1831                           ;main.c: 43:     SSPCLKPPS = 0b00010101;
  1832  033C  3015               	movlw	21
  1833  033D  003C               	movlb	28	; select bank28
  1834  033E  00A0               	movwf	32	;volatile
  1835  033F                     l1958:	
  1836                           
  1837                           ;main.c: 44:     SSPSSPPS = 0b00010100;
  1838  033F  3014               	movlw	20
  1839  0340  00A2               	movwf	34	;volatile
  1840  0341                     l1960:	
  1841                           
  1842                           ;main.c: 45:     RA2PPS = 0x14;
  1843  0341  3014               	movlw	20
  1844  0342  003D               	movlb	29	; select bank29
  1845  0343  0092               	movwf	18	;volatile
  1846  0344                     l1962:	
  1847                           
  1848                           ;main.c: 46:     SSP1STATbits.CKE = 0;
  1849  0344  0024               	movlb	4	; select bank4
  1850  0345  1314               	bcf	20,6	;volatile
  1851  0346                     l1964:	
  1852                           
  1853                           ;main.c: 47:     SSP1CON1 = 0b00100000;
  1854  0346  3020               	movlw	32
  1855  0347  0095               	movwf	21	;volatile
  1856  0348                     l1966:	
  1857                           
  1858                           ;main.c: 48:     PORTCbits.RC4 = 1;
  1859  0348  0020               	movlb	0	; select bank0
  1860  0349  160E               	bsf	14,4	;volatile
  1861  034A                     l1968:	
  1862                           
  1863                           ;main.c: 51:     INTCON = 0xC0;
  1864  034A  30C0               	movlw	192
  1865  034B  008B               	movwf	11	;volatile
  1866  034C                     l1970:	
  1867                           
  1868                           ;main.c: 54:     IOCAPbits.IOCAP4 = 1;
  1869  034C  0027               	movlb	7	; select bank7
  1870  034D  1611               	bsf	17,4	;volatile
  1871  034E                     l1972:	
  1872                           
  1873                           ;main.c: 55:     IOCAPbits.IOCAP5 = 1;
  1874  034E  1691               	bsf	17,5	;volatile
  1875  034F                     l1974:	
  1876                           
  1877                           ;main.c: 56:     IOCAF = 0;
  1878  034F  0193               	clrf	19	;volatile
  1879  0350                     l1976:	
  1880                           
  1881                           ;main.c: 57:     IOCCPbits.IOCCP0 = 0;
  1882  0350  1017               	bcf	23,0	;volatile
  1883  0351                     l1978:	
  1884                           
  1885                           ;main.c: 58:     IOCCNbits.IOCCN0 = 1;
  1886  0351  1418               	bsf	24,0	;volatile
  1887  0352                     l1980:	
  1888                           
  1889                           ;main.c: 59:     IOCCF = 0;
  1890  0352  0199               	clrf	25	;volatile
  1891  0353                     l1982:	
  1892                           
  1893                           ;main.c: 60:     INTCONbits.IOCIE = 1;
  1894  0353  158B               	bsf	11,3	;volatile
  1895  0354                     l1984:	
  1896                           
  1897                           ;main.c: 63:     T1CON = 0b01110000;
  1898  0354  3070               	movlw	112
  1899  0355  0020               	movlb	0	; select bank0
  1900  0356  0098               	movwf	24	;volatile
  1901  0357                     l1986:	
  1902                           
  1903                           ;main.c: 64:     T1CONbits.TMR1ON = 0;
  1904  0357  1018               	bcf	24,0	;volatile
  1905  0358                     l1988:	
  1906                           
  1907                           ;main.c: 65:     PIE1bits.TMR1IE = 1;
  1908  0358  0021               	movlb	1	; select bank1
  1909  0359  1411               	bsf	17,0	;volatile
  1910  035A                     l1990:	
  1911                           
  1912                           ;main.c: 66:     PIR1bits.TMR1IF = 0;
  1913  035A  0020               	movlb	0	; select bank0
  1914  035B  1011               	bcf	17,0	;volatile
  1915  035C                     l1992:	
  1916                           
  1917                           ;main.c: 69:     lcd_init();
  1918  035C  3183  2395  3183   	fcall	_lcd_init
  1919  035F                     l1994:	
  1920                           
  1921                           ;main.c: 70:     lcd_clear();
  1922  035F  3185  2535  3183   	fcall	_lcd_clear
  1923  0362                     l1996:	
  1924                           
  1925                           ;main.c: 71:     lcd_str(StMsg);
  1926  0362  3042               	movlw	(low (_StMsg| 0))& (0+255)
  1927  0363  3184  24B6  3183   	fcall	_lcd_str
  1928  0366                     l1998:	
  1929                           
  1930                           ;main.c: 74:     {;main.c: 75:         SetVol(1,vol);
  1931  0366  087A               	movf	_vol,w
  1932  0367  0020               	movlb	0	; select bank0
  1933  0368  00E1               	movwf	??_main
  1934  0369  0861               	movf	??_main,w
  1935  036A  00F3               	movwf	SetVol@vol_data
  1936  036B  3001               	movlw	1
  1937  036C  3184  24FB  3183   	fcall	_SetVol
  1938  036F                     l2000:	
  1939                           
  1940                           ;main.c: 77:         lcd_cmd(0xC0);
  1941  036F  30C0               	movlw	192
  1942  0370  3184  2499  3183   	fcall	_lcd_cmd
  1943  0373                     l2002:	
  1944                           
  1945                           ;main.c: 78:         if(vol == 127){
  1946  0373  307F               	movlw	127
  1947  0374  067A               	xorwf	_vol,w
  1948  0375  1D03               	btfss	3,2
  1949  0376  2B78               	goto	u1851
  1950  0377  2B79               	goto	u1850
  1951  0378                     u1851:	
  1952  0378  2B7E               	goto	l2006
  1953  0379                     u1850:	
  1954  0379                     l2004:	
  1955                           
  1956                           ;main.c: 79:             lcd_str(Mute);
  1957  0379  3022               	movlw	(low (_Mute| 0))& (0+255)
  1958  037A  3184  24B6  3183   	fcall	_lcd_str
  1959                           
  1960                           ;main.c: 80:         }
  1961  037D  2B66               	goto	l1998
  1962  037E                     l2006:	
  1963                           
  1964                           ;main.c: 82:             itostring(5, vol_lcd, Buffer+7);
  1965  037E  3005               	movlw	5
  1966  037F  0020               	movlb	0	; select bank0
  1967  0380  00CE               	movwf	itostring@digit
  1968  0381  3000               	movlw	0
  1969  0382  00CF               	movwf	itostring@digit+1
  1970  0383  0821               	movf	_vol_lcd+1,w
  1971  0384  00D1               	movwf	itostring@data+1
  1972  0385  0820               	movf	_vol_lcd,w
  1973  0386  00D0               	movwf	itostring@data
  1974  0387  3039               	movlw	(low ((_Buffer| 0+7)))& (0+255)
  1975  0388  00E1               	movwf	??_main
  1976  0389  0861               	movf	??_main,w
  1977  038A  00D2               	movwf	itostring@buffer
  1978  038B  3181  21B7  3183   	fcall	_itostring
  1979                           
  1980                           ;main.c: 83:             lcd_str(Buffer);
  1981  038E  3032               	movlw	(low (_Buffer| 0))& (0+255)
  1982  038F  3184  24B6  3183   	fcall	_lcd_str
  1983  0392  2B66               	goto	l1998
  1984  0393  3181  2992         	ljmp	start
  1985  0395                     __end_of_main:	
  1986                           
  1987                           	psect	text1
  1988  04B6                     __ptext1:	
  1989 ;; *************** function _lcd_str *****************
  1990 ;; Defined at:
  1991 ;;		line 327 in file "main.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  buf             1    wreg     PTR unsigned char 
  1994 ;;		 -> Buffer(16), Mute(16), StMsg(8), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  buf             1    0[BANK0 ] PTR unsigned char 
  1997 ;;		 -> Buffer(16), Mute(16), StMsg(8), 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    4
  2014 ;; This function calls:
  2015 ;;		_lcd_data
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _lcd_str
  2023  04B6                     _lcd_str:	
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _lcd_str: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2027                           ;lcd_str@buf stored from wreg
  2028  04B6  0020               	movlb	0	; select bank0
  2029  04B7  00CA               	movwf	lcd_str@buf
  2030  04B8                     l1878:	
  2031                           
  2032                           ;main.c: 327: void lcd_str(uint8_t *buf);main.c: 328: {;main.c: 329:     while(*buf != 0
      +                          )
  2033  04B8  2CC5               	goto	l1884
  2034  04B9                     l1880:	
  2035                           
  2036                           ;main.c: 330:         lcd_data(*buf++);
  2037  04B9  084A               	movf	lcd_str@buf,w
  2038  04BA  0086               	movwf	6
  2039  04BB  0187               	clrf	7
  2040  04BC  0801               	movf	1,w
  2041  04BD  3184  24CE  3184   	fcall	_lcd_data
  2042  04C0                     l1882:	
  2043  04C0  3001               	movlw	1
  2044  04C1  00F7               	movwf	??_lcd_str
  2045  04C2  0877               	movf	??_lcd_str,w
  2046  04C3  0020               	movlb	0	; select bank0
  2047  04C4  07CA               	addwf	lcd_str@buf,f
  2048  04C5                     l1884:	
  2049                           
  2050                           ;main.c: 329:     while(*buf != 0)
  2051  04C5  084A               	movf	lcd_str@buf,w
  2052  04C6  0086               	movwf	6
  2053  04C7  0187               	clrf	7
  2054  04C8  0801               	movf	1,w
  2055  04C9  1D03               	btfss	3,2
  2056  04CA  2CCC               	goto	u1671
  2057  04CB  2CCD               	goto	u1670
  2058  04CC                     u1671:	
  2059  04CC  2CB9               	goto	l1880
  2060  04CD                     u1670:	
  2061  04CD                     l279:	
  2062  04CD  0008               	return
  2063  04CE                     __end_of_lcd_str:	
  2064                           
  2065                           	psect	text2
  2066  04CE                     __ptext2:	
  2067 ;; *************** function _lcd_data *****************
  2068 ;; Defined at:
  2069 ;;		line 307 in file "main.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  asci            1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  asci            1    6[COMMON] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;Total ram usage:        2 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    3
  2090 ;; This function calls:
  2091 ;;		_lcd_out
  2092 ;; This function is called by:
  2093 ;;		_lcd_str
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _lcd_data
  2099  04CE                     _lcd_data:	
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2103                           ;lcd_data@asci stored from wreg
  2104  04CE  00F6               	movwf	lcd_data@asci
  2105  04CF                     l1818:	
  2106                           
  2107                           ;main.c: 307: void lcd_data(uint8_t asci);main.c: 308: {;main.c: 309:     lcd_out(asci,0
      +                          );
  2108  04CF  01F3               	clrf	lcd_out@flag
  2109  04D0  0876               	movf	lcd_data@asci,w
  2110  04D1  3185  2523  3184   	fcall	_lcd_out
  2111                           
  2112                           ;main.c: 310:     lcd_out(asci<<4,0);
  2113  04D4  01F3               	clrf	lcd_out@flag
  2114  04D5  0876               	movf	lcd_data@asci,w
  2115  04D6  00F5               	movwf	??_lcd_data
  2116  04D7  3003               	movlw	3
  2117  04D8                     u1575:	
  2118  04D8  35F5               	lslf	??_lcd_data,f
  2119  04D9  3EFF               	addlw	-1
  2120  04DA  1D03               	skipz
  2121  04DB  2CD8               	goto	u1575
  2122  04DC  3575               	lslf	??_lcd_data,w
  2123  04DD  3185  2523  3184   	fcall	_lcd_out
  2124  04E0                     l1820:	
  2125                           
  2126                           ;main.c: 311:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2127  04E0  3021               	movlw	33
  2128  04E1                     u1867:	
  2129  04E1  0B89               	decfsz	9,f
  2130  04E2  2CE1               	goto	u1867
  2131  04E3  0000               	nop
  2132  04E4                     l267:	
  2133  04E4  0008               	return
  2134  04E5                     __end_of_lcd_data:	
  2135                           
  2136                           	psect	text3
  2137  0395                     __ptext3:	
  2138 ;; *************** function _lcd_init *****************
  2139 ;; Defined at:
  2140 ;;		line 333 in file "main.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;Total ram usage:        2 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    4
  2161 ;; This function calls:
  2162 ;;		_lcd_cmd
  2163 ;;		_lcd_out
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _lcd_init
  2171  0395                     _lcd_init:	
  2172  0395                     l1860:	
  2173                           ;incstack = 0
  2174                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2175                           
  2176                           
  2177                           ;main.c: 335:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2178  0395  3002               	movlw	2
  2179  0396  0020               	movlb	0	; select bank0
  2180  0397  00CB               	movwf	??_lcd_init+1
  2181  0398  3086               	movlw	134
  2182  0399  00CA               	movwf	??_lcd_init
  2183  039A  3099               	movlw	153
  2184  039B                     u1877:	
  2185  039B  0B89               	decfsz	9,f
  2186  039C  2B9B               	goto	u1877
  2187  039D  0BCA               	decfsz	??_lcd_init,f
  2188  039E  2B9B               	goto	u1877
  2189  039F  0BCB               	decfsz	??_lcd_init+1,f
  2190  03A0  2B9B               	goto	u1877
  2191  03A1                     l1862:	
  2192                           
  2193                           ;main.c: 336:     lcd_out(0x30,1);
  2194  03A1  01F3               	clrf	lcd_out@flag
  2195  03A2  0AF3               	incf	lcd_out@flag,f
  2196  03A3  3030               	movlw	48
  2197  03A4  3185  2523  3183   	fcall	_lcd_out
  2198  03A7                     l1864:	
  2199                           
  2200                           ;main.c: 337:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2201  03A7  300D               	movlw	13
  2202  03A8  0020               	movlb	0	; select bank0
  2203  03A9  00CA               	movwf	??_lcd_init
  2204  03AA  30FB               	movlw	251
  2205  03AB                     u1887:	
  2206  03AB  0B89               	decfsz	9,f
  2207  03AC  2BAB               	goto	u1887
  2208  03AD  0BCA               	decfsz	??_lcd_init,f
  2209  03AE  2BAB               	goto	u1887
  2210  03AF  3200               	nop2
  2211                           
  2212                           ;main.c: 338:     lcd_out(0x30,1);
  2213  03B0  01F3               	clrf	lcd_out@flag
  2214  03B1  0AF3               	incf	lcd_out@flag,f
  2215  03B2  3030               	movlw	48
  2216  03B3  3185  2523  3183   	fcall	_lcd_out
  2217  03B6                     l1866:	
  2218                           
  2219                           ;main.c: 339:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2220  03B6  3003               	movlw	3
  2221  03B7  0020               	movlb	0	; select bank0
  2222  03B8  00CA               	movwf	??_lcd_init
  2223  03B9  3097               	movlw	151
  2224  03BA                     u1897:	
  2225  03BA  0B89               	decfsz	9,f
  2226  03BB  2BBA               	goto	u1897
  2227  03BC  0BCA               	decfsz	??_lcd_init,f
  2228  03BD  2BBA               	goto	u1897
  2229  03BE  3200               	nop2
  2230  03BF                     l1868:	
  2231                           
  2232                           ;main.c: 340:     lcd_out(0x30,1);
  2233  03BF  01F3               	clrf	lcd_out@flag
  2234  03C0  0AF3               	incf	lcd_out@flag,f
  2235  03C1  3030               	movlw	48
  2236  03C2  3185  2523  3183   	fcall	_lcd_out
  2237                           
  2238                           ;main.c: 341:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2239  03C5  3003               	movlw	3
  2240  03C6  0020               	movlb	0	; select bank0
  2241  03C7  00CA               	movwf	??_lcd_init
  2242  03C8  3097               	movlw	151
  2243  03C9                     u1907:	
  2244  03C9  0B89               	decfsz	9,f
  2245  03CA  2BC9               	goto	u1907
  2246  03CB  0BCA               	decfsz	??_lcd_init,f
  2247  03CC  2BC9               	goto	u1907
  2248  03CD  3200               	nop2
  2249  03CE                     l1870:	
  2250                           
  2251                           ;main.c: 342:     lcd_out(0x20,1);
  2252  03CE  01F3               	clrf	lcd_out@flag
  2253  03CF  0AF3               	incf	lcd_out@flag,f
  2254  03D0  3020               	movlw	32
  2255  03D1  3185  2523  3183   	fcall	_lcd_out
  2256  03D4                     l1872:	
  2257                           
  2258                           ;main.c: 343:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2259  03D4  3003               	movlw	3
  2260  03D5  0020               	movlb	0	; select bank0
  2261  03D6  00CA               	movwf	??_lcd_init
  2262  03D7  3097               	movlw	151
  2263  03D8                     u1917:	
  2264  03D8  0B89               	decfsz	9,f
  2265  03D9  2BD8               	goto	u1917
  2266  03DA  0BCA               	decfsz	??_lcd_init,f
  2267  03DB  2BD8               	goto	u1917
  2268  03DC  3200               	nop2
  2269                           
  2270                           ;main.c: 344:     lcd_cmd(0x2E);
  2271  03DD  302E               	movlw	46
  2272  03DE  3184  2499  3183   	fcall	_lcd_cmd
  2273                           
  2274                           ;main.c: 345:     lcd_cmd(0x08);
  2275  03E1  3008               	movlw	8
  2276  03E2  3184  2499  3183   	fcall	_lcd_cmd
  2277                           
  2278                           ;main.c: 346:     lcd_cmd(0x0C);
  2279  03E5  300C               	movlw	12
  2280  03E6  3184  2499  3183   	fcall	_lcd_cmd
  2281                           
  2282                           ;main.c: 347:     lcd_cmd(0x06);
  2283  03E9  3006               	movlw	6
  2284  03EA  3184  2499  3183   	fcall	_lcd_cmd
  2285                           
  2286                           ;main.c: 348:     lcd_cmd(0x02);
  2287  03ED  3002               	movlw	2
  2288  03EE  3184  2499  3183   	fcall	_lcd_cmd
  2289  03F1                     l282:	
  2290  03F1  0008               	return
  2291  03F2                     __end_of_lcd_init:	
  2292                           
  2293                           	psect	text4
  2294  0535                     __ptext4:	
  2295 ;; *************** function _lcd_clear *****************
  2296 ;; Defined at:
  2297 ;;		line 321 in file "main.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;Total ram usage:        1 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    4
  2318 ;; This function calls:
  2319 ;;		_lcd_cmd
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _lcd_clear
  2327  0535                     _lcd_clear:	
  2328  0535                     l1874:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2331                           
  2332                           
  2333                           ;main.c: 323:     lcd_cmd(0x01);
  2334  0535  3001               	movlw	1
  2335  0536  3184  2499  3185   	fcall	_lcd_cmd
  2336  0539                     l1876:	
  2337                           
  2338                           ;main.c: 324:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2339  0539  3027               	movlw	39
  2340  053A  00F7               	movwf	??_lcd_clear
  2341  053B  30F5               	movlw	245
  2342  053C                     u1927:	
  2343  053C  0B89               	decfsz	9,f
  2344  053D  2D3C               	goto	u1927
  2345  053E  0BF7               	decfsz	??_lcd_clear,f
  2346  053F  2D3C               	goto	u1927
  2347  0540  0000               	nop
  2348  0541                     l273:	
  2349  0541  0008               	return
  2350  0542                     __end_of_lcd_clear:	
  2351                           
  2352                           	psect	text5
  2353  0499                     __ptext5:	
  2354 ;; *************** function _lcd_cmd *****************
  2355 ;; Defined at:
  2356 ;;		line 314 in file "main.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  cmd             1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  cmd             1    6[COMMON] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    3
  2377 ;; This function calls:
  2378 ;;		_lcd_out
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;;		_lcd_clear
  2382 ;;		_lcd_init
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _lcd_cmd
  2388  0499                     _lcd_cmd:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2392                           ;lcd_cmd@cmd stored from wreg
  2393  0499  00F6               	movwf	lcd_cmd@cmd
  2394  049A                     l1814:	
  2395                           
  2396                           ;main.c: 314: void lcd_cmd(uint8_t cmd);main.c: 315: {;main.c: 316:     lcd_out(cmd,1);
  2397  049A  01F3               	clrf	lcd_out@flag
  2398  049B  0AF3               	incf	lcd_out@flag,f
  2399  049C  0876               	movf	lcd_cmd@cmd,w
  2400  049D  3185  2523  3184   	fcall	_lcd_out
  2401                           
  2402                           ;main.c: 317:     lcd_out(cmd<<4, 1);
  2403  04A0  01F3               	clrf	lcd_out@flag
  2404  04A1  0AF3               	incf	lcd_out@flag,f
  2405  04A2  0876               	movf	lcd_cmd@cmd,w
  2406  04A3  00F5               	movwf	??_lcd_cmd
  2407  04A4  3003               	movlw	3
  2408  04A5                     u1565:	
  2409  04A5  35F5               	lslf	??_lcd_cmd,f
  2410  04A6  3EFF               	addlw	-1
  2411  04A7  1D03               	skipz
  2412  04A8  2CA5               	goto	u1565
  2413  04A9  3575               	lslf	??_lcd_cmd,w
  2414  04AA  3185  2523  3184   	fcall	_lcd_out
  2415  04AD                     l1816:	
  2416                           
  2417                           ;main.c: 318:     _delay((unsigned long)((2)*(8000000/4000.0)));
  2418  04AD  3006               	movlw	6
  2419  04AE  00F5               	movwf	??_lcd_cmd
  2420  04AF  3030               	movlw	48
  2421  04B0                     u1937:	
  2422  04B0  0B89               	decfsz	9,f
  2423  04B1  2CB0               	goto	u1937
  2424  04B2  0BF5               	decfsz	??_lcd_cmd,f
  2425  04B3  2CB0               	goto	u1937
  2426  04B4  3200               	nop2
  2427  04B5                     l270:	
  2428  04B5  0008               	return
  2429  04B6                     __end_of_lcd_cmd:	
  2430                           
  2431                           	psect	text6
  2432  0523                     __ptext6:	
  2433 ;; *************** function _lcd_out *****************
  2434 ;; Defined at:
  2435 ;;		line 296 in file "main.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  code            1    wreg     unsigned char 
  2438 ;;  flag            1    3[COMMON] unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  code            1    4[COMMON] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2450 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;Total ram usage:        2 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    2
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_lcd_data
  2461 ;;		_lcd_cmd
  2462 ;;		_lcd_init
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _lcd_out
  2468  0523                     _lcd_out:	
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _lcd_out: [wreg+status,2+status,0]
  2472                           ;lcd_out@code stored from wreg
  2473  0523  00F4               	movwf	lcd_out@code
  2474  0524                     l1808:	
  2475                           
  2476                           ;main.c: 296: void lcd_out(uint8_t code, uint8_t flag);main.c: 297: {;main.c: 298:     L
      +                          ATB = (code & 0xF0);
  2477  0524  0874               	movf	lcd_out@code,w
  2478  0525  39F0               	andlw	240
  2479  0526  0022               	movlb	2	; select bank2
  2480  0527  008D               	movwf	13	;volatile
  2481  0528                     l1810:	
  2482                           
  2483                           ;main.c: 299:     if(flag == 0)
  2484  0528  0873               	movf	lcd_out@flag,w
  2485  0529  1D03               	btfss	3,2
  2486  052A  2D2C               	goto	u1551
  2487  052B  2D2D               	goto	u1550
  2488  052C                     u1551:	
  2489  052C  2D30               	goto	l262
  2490  052D                     u1550:	
  2491  052D                     l1812:	
  2492                           
  2493                           ;main.c: 300:         PORTCbits.RC6=1;
  2494  052D  0020               	movlb	0	; select bank0
  2495  052E  170E               	bsf	14,6	;volatile
  2496  052F  2D32               	goto	l263
  2497  0530                     l262:	
  2498                           ;main.c: 301:     else
  2499                           
  2500                           
  2501                           ;main.c: 302:         PORTCbits.RC6=0;
  2502  0530  0020               	movlb	0	; select bank0
  2503  0531  130E               	bcf	14,6	;volatile
  2504  0532                     l263:	
  2505                           
  2506                           ;main.c: 303:     PORTCbits.RC7=1;
  2507  0532  178E               	bsf	14,7	;volatile
  2508                           
  2509                           ;main.c: 304:     PORTCbits.RC7=0;
  2510  0533  138E               	bcf	14,7	;volatile
  2511  0534                     l264:	
  2512  0534  0008               	return
  2513  0535                     __end_of_lcd_out:	
  2514                           
  2515                           	psect	text7
  2516  01B7                     __ptext7:	
  2517 ;; *************** function _itostring *****************
  2518 ;; Defined at:
  2519 ;;		line 245 in file "main.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  digit           2    4[BANK0 ] int 
  2522 ;;  data            2    6[BANK0 ] int 
  2523 ;;  buffer          1    8[BANK0 ] PTR unsigned char 
  2524 ;;		 -> Buffer(16), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  i               2   21[BANK0 ] int 
  2527 ;;  flag4           2   19[BANK0 ] int 
  2528 ;;  flag1           2   17[BANK0 ] int 
  2529 ;;  x               2   15[BANK0 ] int 
  2530 ;;  flag2           2   13[BANK0 ] int 
  2531 ;;  flag3           2   11[BANK0 ] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2541 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;Total ram usage:       19 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    3
  2548 ;; This function calls:
  2549 ;;		___awdiv
  2550 ;;		___awmod
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _itostring
  2558  01B7                     _itostring:	
  2559  01B7                     l1886:	
  2560                           ;incstack = 0
  2561                           ; Regs used in _itostring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2562                           
  2563                           
  2564                           ;main.c: 245: void itostring(int digit, int data, uint8_t *buffer);main.c: 246: {;main.c
      +                          : 247:     int i;;main.c: 248:     int x;;main.c: 249:     int flag1 = 0;
  2565  01B7  0020               	movlb	0	; select bank0
  2566  01B8  01DB               	clrf	itostring@flag1
  2567  01B9  01DC               	clrf	itostring@flag1+1
  2568                           
  2569                           ;main.c: 250:     int flag2 = 0;
  2570  01BA  01D7               	clrf	itostring@flag2
  2571  01BB  01D8               	clrf	itostring@flag2+1
  2572                           
  2573                           ;main.c: 251:     int flag3 = 0;
  2574  01BC  01D5               	clrf	itostring@flag3
  2575  01BD  01D6               	clrf	itostring@flag3+1
  2576                           
  2577                           ;main.c: 252:     int flag4 = 0;
  2578  01BE  01DD               	clrf	itostring@flag4
  2579  01BF  01DE               	clrf	itostring@flag4+1
  2580  01C0                     l1888:	
  2581                           
  2582                           ;main.c: 253:     buffer += digit;
  2583  01C0  084E               	movf	itostring@digit,w
  2584  01C1  00D3               	movwf	??_itostring
  2585  01C2  0853               	movf	??_itostring,w
  2586  01C3  07D2               	addwf	itostring@buffer,f
  2587  01C4                     l1890:	
  2588                           
  2589                           ;main.c: 255:     if(data==5)
  2590  01C4  3005               	movlw	5
  2591  01C5  0650               	xorwf	itostring@data,w
  2592  01C6  0451               	iorwf	itostring@data+1,w
  2593  01C7  1D03               	btfss	3,2
  2594  01C8  29CA               	goto	u1681
  2595  01C9  29CB               	goto	u1680
  2596  01CA                     u1681:	
  2597  01CA  29D3               	goto	l1894
  2598  01CB                     u1680:	
  2599  01CB                     l1892:	
  2600                           
  2601                           ;main.c: 256:     {;main.c: 257:         flag2 = 1;
  2602  01CB  3001               	movlw	1
  2603  01CC  00D7               	movwf	itostring@flag2
  2604  01CD  3000               	movlw	0
  2605  01CE  00D8               	movwf	itostring@flag2+1
  2606                           
  2607                           ;main.c: 258:         flag3 = 1;
  2608  01CF  3001               	movlw	1
  2609  01D0  00D5               	movwf	itostring@flag3
  2610  01D1  3000               	movlw	0
  2611  01D2  00D6               	movwf	itostring@flag3+1
  2612  01D3                     l1894:	
  2613                           
  2614                           ;main.c: 260:     if(data==0)
  2615  01D3  0850               	movf	itostring@data,w
  2616  01D4  0451               	iorwf	itostring@data+1,w
  2617  01D5  1D03               	btfss	3,2
  2618  01D6  29D8               	goto	u1691
  2619  01D7  29D9               	goto	u1690
  2620  01D8                     u1691:	
  2621  01D8  29E5               	goto	l245
  2622  01D9                     u1690:	
  2623  01D9                     l1896:	
  2624                           
  2625                           ;main.c: 261:     {;main.c: 262:         flag2 = 1;
  2626  01D9  3001               	movlw	1
  2627  01DA  00D7               	movwf	itostring@flag2
  2628  01DB  3000               	movlw	0
  2629  01DC  00D8               	movwf	itostring@flag2+1
  2630                           
  2631                           ;main.c: 263:         flag3 = 1;
  2632  01DD  3001               	movlw	1
  2633  01DE  00D5               	movwf	itostring@flag3
  2634  01DF  3000               	movlw	0
  2635  01E0  00D6               	movwf	itostring@flag3+1
  2636                           
  2637                           ;main.c: 264:         flag4 = 1;
  2638  01E1  3001               	movlw	1
  2639  01E2  00DD               	movwf	itostring@flag4
  2640  01E3  3000               	movlw	0
  2641  01E4  00DE               	movwf	itostring@flag4+1
  2642  01E5                     l245:	
  2643                           ;main.c: 265:     }
  2644                           
  2645                           
  2646                           ;main.c: 267:     for(i=digit; i>0; i--)
  2647  01E5  084F               	movf	itostring@digit+1,w
  2648  01E6  00E0               	movwf	itostring@i+1
  2649  01E7  084E               	movf	itostring@digit,w
  2650  01E8  00DF               	movwf	itostring@i
  2651  01E9  0860               	movf	itostring@i+1,w
  2652  01EA  3A80               	xorlw	128
  2653  01EB  00D3               	movwf	??_itostring
  2654  01EC  3080               	movlw	128
  2655  01ED  0253               	subwf	??_itostring,w
  2656  01EE  1D03               	skipz
  2657  01EF  29F2               	goto	u1705
  2658  01F0  3001               	movlw	1
  2659  01F1  025F               	subwf	itostring@i,w
  2660  01F2                     u1705:	
  2661  01F2  1803               	skipnc
  2662  01F3  29F5               	goto	u1701
  2663  01F4  29F6               	goto	u1700
  2664  01F5                     u1701:	
  2665  01F5  29F7               	goto	l1900
  2666  01F6                     u1700:	
  2667  01F6  2AD5               	goto	l259
  2668  01F7                     l1900:	
  2669                           
  2670                           ;main.c: 268:     {;main.c: 269:         buffer--;
  2671  01F7  3001               	movlw	1
  2672  01F8  0020               	movlb	0	; select bank0
  2673  01F9  02D2               	subwf	itostring@buffer,f
  2674  01FA                     l1902:	
  2675                           
  2676                           ;main.c: 270:         x = data % 10;
  2677  01FA  300A               	movlw	10
  2678  01FB  00F3               	movwf	___awmod@divisor
  2679  01FC  3000               	movlw	0
  2680  01FD  00F4               	movwf	___awmod@divisor+1
  2681  01FE  0851               	movf	itostring@data+1,w
  2682  01FF  00F6               	movwf	___awmod@dividend+1
  2683  0200  0850               	movf	itostring@data,w
  2684  0201  00F5               	movwf	___awmod@dividend
  2685  0202  3183  23F2  3181   	fcall	___awmod
  2686  0205  0874               	movf	?___awmod+1,w
  2687  0206  0020               	movlb	0	; select bank0
  2688  0207  00DA               	movwf	itostring@x+1
  2689  0208  0873               	movf	?___awmod,w
  2690  0209  00D9               	movwf	itostring@x
  2691  020A                     l1904:	
  2692                           
  2693                           ;main.c: 272:         if(i==(digit-2))
  2694  020A  084E               	movf	itostring@digit,w
  2695  020B  3EFE               	addlw	254
  2696  020C  00D3               	movwf	??_itostring
  2697  020D  30FF               	movlw	255
  2698  020E  3D4F               	addwfc	itostring@digit+1,w
  2699  020F  00D4               	movwf	??_itostring+1
  2700  0210  0860               	movf	itostring@i+1,w
  2701  0211  0654               	xorwf	??_itostring+1,w
  2702  0212  1D03               	skipz
  2703  0213  2A16               	goto	u1715
  2704  0214  085F               	movf	itostring@i,w
  2705  0215  0653               	xorwf	??_itostring,w
  2706  0216                     u1715:	
  2707  0216  1D03               	skipz
  2708  0217  2A19               	goto	u1711
  2709  0218  2A1A               	goto	u1710
  2710  0219                     u1711:	
  2711  0219  2A1C               	goto	l1908
  2712  021A                     u1710:	
  2713  021A                     l1906:	
  2714                           
  2715                           ;main.c: 273:             flag2 = 0;
  2716  021A  01D7               	clrf	itostring@flag2
  2717  021B  01D8               	clrf	itostring@flag2+1
  2718  021C                     l1908:	
  2719                           
  2720                           ;main.c: 274:         if(i==(digit-2) && flag3==1)
  2721  021C  084E               	movf	itostring@digit,w
  2722  021D  3EFE               	addlw	254
  2723  021E  00D3               	movwf	??_itostring
  2724  021F  30FF               	movlw	255
  2725  0220  3D4F               	addwfc	itostring@digit+1,w
  2726  0221  00D4               	movwf	??_itostring+1
  2727  0222  0860               	movf	itostring@i+1,w
  2728  0223  0654               	xorwf	??_itostring+1,w
  2729  0224  1D03               	skipz
  2730  0225  2A28               	goto	u1725
  2731  0226  085F               	movf	itostring@i,w
  2732  0227  0653               	xorwf	??_itostring,w
  2733  0228                     u1725:	
  2734  0228  1D03               	skipz
  2735  0229  2A2B               	goto	u1721
  2736  022A  2A2C               	goto	u1720
  2737  022B                     u1721:	
  2738  022B  2A3B               	goto	l1914
  2739  022C                     u1720:	
  2740  022C                     l1910:	
  2741  022C  0355               	decf	itostring@flag3,w
  2742  022D  0456               	iorwf	itostring@flag3+1,w
  2743  022E  1D03               	btfss	3,2
  2744  022F  2A31               	goto	u1731
  2745  0230  2A32               	goto	u1730
  2746  0231                     u1731:	
  2747  0231  2A3B               	goto	l1914
  2748  0232                     u1730:	
  2749  0232                     l1912:	
  2750                           
  2751                           ;main.c: 275:             *buffer = x + '0';
  2752  0232  0859               	movf	itostring@x,w
  2753  0233  3E30               	addlw	48
  2754  0234  00D3               	movwf	??_itostring
  2755  0235  0852               	movf	itostring@buffer,w
  2756  0236  0086               	movwf	6
  2757  0237  0187               	clrf	7
  2758  0238  0853               	movf	??_itostring,w
  2759  0239  0081               	movwf	1
  2760  023A  2AC4               	goto	l1948
  2761  023B                     l1914:	
  2762  023B  0850               	movf	itostring@data,w
  2763  023C  0451               	iorwf	itostring@data+1,w
  2764  023D  1D03               	btfss	3,2
  2765  023E  2A40               	goto	u1741
  2766  023F  2A41               	goto	u1740
  2767  0240                     u1741:	
  2768  0240  2A59               	goto	l1922
  2769  0241                     u1740:	
  2770  0241                     l1916:	
  2771  0241  084F               	movf	itostring@digit+1,w
  2772  0242  0660               	xorwf	itostring@i+1,w
  2773  0243  1D03               	skipz
  2774  0244  2A47               	goto	u1755
  2775  0245  084E               	movf	itostring@digit,w
  2776  0246  065F               	xorwf	itostring@i,w
  2777  0247                     u1755:	
  2778  0247  1903               	skipnz
  2779  0248  2A4A               	goto	u1751
  2780  0249  2A4B               	goto	u1750
  2781  024A                     u1751:	
  2782  024A  2A59               	goto	l1922
  2783  024B                     u1750:	
  2784  024B                     l1918:	
  2785  024B  035B               	decf	itostring@flag1,w
  2786  024C  045C               	iorwf	itostring@flag1+1,w
  2787  024D  1D03               	btfss	3,2
  2788  024E  2A50               	goto	u1761
  2789  024F  2A51               	goto	u1760
  2790  0250                     u1761:	
  2791  0250  2A59               	goto	l1922
  2792  0251                     u1760:	
  2793  0251                     l1920:	
  2794                           
  2795                           ;main.c: 277:             *buffer = ' ';
  2796  0251  3020               	movlw	32
  2797  0252  00D3               	movwf	??_itostring
  2798  0253  0852               	movf	itostring@buffer,w
  2799  0254  0086               	movwf	6
  2800  0255  0187               	clrf	7
  2801  0256  0853               	movf	??_itostring,w
  2802  0257  0081               	movwf	1
  2803  0258  2AC4               	goto	l1948
  2804  0259                     l1922:	
  2805  0259  0850               	movf	itostring@data,w
  2806  025A  0451               	iorwf	itostring@data+1,w
  2807  025B  1D03               	btfss	3,2
  2808  025C  2A5E               	goto	u1771
  2809  025D  2A5F               	goto	u1770
  2810  025E                     u1771:	
  2811  025E  2A94               	goto	l1940
  2812  025F                     u1770:	
  2813  025F                     l1924:	
  2814  025F  084F               	movf	itostring@digit+1,w
  2815  0260  0660               	xorwf	itostring@i+1,w
  2816  0261  1D03               	skipz
  2817  0262  2A65               	goto	u1785
  2818  0263  084E               	movf	itostring@digit,w
  2819  0264  065F               	xorwf	itostring@i,w
  2820  0265                     u1785:	
  2821  0265  1903               	skipnz
  2822  0266  2A68               	goto	u1781
  2823  0267  2A69               	goto	u1780
  2824  0268                     u1781:	
  2825  0268  2A94               	goto	l1940
  2826  0269                     u1780:	
  2827  0269                     l1926:	
  2828  0269  085B               	movf	itostring@flag1,w
  2829  026A  045C               	iorwf	itostring@flag1+1,w
  2830  026B  1D03               	btfss	3,2
  2831  026C  2A6E               	goto	u1791
  2832  026D  2A6F               	goto	u1790
  2833  026E                     u1791:	
  2834  026E  2A94               	goto	l1940
  2835  026F                     u1790:	
  2836  026F                     l1928:	
  2837  026F  0857               	movf	itostring@flag2,w
  2838  0270  0458               	iorwf	itostring@flag2+1,w
  2839  0271  1D03               	btfss	3,2
  2840  0272  2A74               	goto	u1801
  2841  0273  2A75               	goto	u1800
  2842  0274                     u1801:	
  2843  0274  2A94               	goto	l1940
  2844  0275                     u1800:	
  2845  0275                     l1930:	
  2846                           
  2847                           ;main.c: 279:             if(flag4==0)
  2848  0275  085D               	movf	itostring@flag4,w
  2849  0276  045E               	iorwf	itostring@flag4+1,w
  2850  0277  1D03               	btfss	3,2
  2851  0278  2A7A               	goto	u1811
  2852  0279  2A7B               	goto	u1810
  2853  027A                     u1811:	
  2854  027A  2A82               	goto	l1934
  2855  027B                     u1810:	
  2856  027B                     l1932:	
  2857                           
  2858                           ;main.c: 280:                 *buffer = '-';
  2859  027B  302D               	movlw	45
  2860  027C  00D3               	movwf	??_itostring
  2861  027D  0852               	movf	itostring@buffer,w
  2862  027E  0086               	movwf	6
  2863  027F  0187               	clrf	7
  2864  0280  0853               	movf	??_itostring,w
  2865  0281  0081               	movwf	1
  2866  0282                     l1934:	
  2867                           
  2868                           ;main.c: 281:             if(flag4==1)
  2869  0282  035D               	decf	itostring@flag4,w
  2870  0283  045E               	iorwf	itostring@flag4+1,w
  2871  0284  1D03               	btfss	3,2
  2872  0285  2A87               	goto	u1821
  2873  0286  2A88               	goto	u1820
  2874  0287                     u1821:	
  2875  0287  2A8F               	goto	l1938
  2876  0288                     u1820:	
  2877  0288                     l1936:	
  2878                           
  2879                           ;main.c: 282:                 *buffer = ' ';
  2880  0288  3020               	movlw	32
  2881  0289  00D3               	movwf	??_itostring
  2882  028A  0852               	movf	itostring@buffer,w
  2883  028B  0086               	movwf	6
  2884  028C  0187               	clrf	7
  2885  028D  0853               	movf	??_itostring,w
  2886  028E  0081               	movwf	1
  2887  028F                     l1938:	
  2888                           
  2889                           ;main.c: 283:             flag1 = 1;
  2890  028F  3001               	movlw	1
  2891  0290  00DB               	movwf	itostring@flag1
  2892  0291  3000               	movlw	0
  2893  0292  00DC               	movwf	itostring@flag1+1
  2894                           
  2895                           ;main.c: 284:         }
  2896  0293  2AC4               	goto	l1948
  2897  0294                     l1940:	
  2898                           
  2899                           ;main.c: 286:             if(i==(digit-1)){
  2900  0294  084E               	movf	itostring@digit,w
  2901  0295  3EFF               	addlw	255
  2902  0296  00D3               	movwf	??_itostring
  2903  0297  30FF               	movlw	255
  2904  0298  3D4F               	addwfc	itostring@digit+1,w
  2905  0299  00D4               	movwf	??_itostring+1
  2906  029A  0860               	movf	itostring@i+1,w
  2907  029B  0654               	xorwf	??_itostring+1,w
  2908  029C  1D03               	skipz
  2909  029D  2AA0               	goto	u1835
  2910  029E  085F               	movf	itostring@i,w
  2911  029F  0653               	xorwf	??_itostring,w
  2912  02A0                     u1835:	
  2913  02A0  1D03               	skipz
  2914  02A1  2AA3               	goto	u1831
  2915  02A2  2AA4               	goto	u1830
  2916  02A3                     u1831:	
  2917  02A3  2AAC               	goto	l1944
  2918  02A4                     u1830:	
  2919  02A4                     l1942:	
  2920                           
  2921                           ;main.c: 287:                 *buffer = '.';
  2922  02A4  302E               	movlw	46
  2923  02A5  00D3               	movwf	??_itostring
  2924  02A6  0852               	movf	itostring@buffer,w
  2925  02A7  0086               	movwf	6
  2926  02A8  0187               	clrf	7
  2927  02A9  0853               	movf	??_itostring,w
  2928  02AA  0081               	movwf	1
  2929                           
  2930                           ;main.c: 288:             }else{
  2931  02AB  2AC4               	goto	l1948
  2932  02AC                     l1944:	
  2933                           
  2934                           ;main.c: 289:                 *buffer = x + '0';
  2935  02AC  0859               	movf	itostring@x,w
  2936  02AD  3E30               	addlw	48
  2937  02AE  00D3               	movwf	??_itostring
  2938  02AF  0852               	movf	itostring@buffer,w
  2939  02B0  0086               	movwf	6
  2940  02B1  0187               	clrf	7
  2941  02B2  0853               	movf	??_itostring,w
  2942  02B3  0081               	movwf	1
  2943  02B4                     l1946:	
  2944                           
  2945                           ;main.c: 290:                 data /= 10;
  2946  02B4  300A               	movlw	10
  2947  02B5  00F3               	movwf	___awdiv@divisor
  2948  02B6  3000               	movlw	0
  2949  02B7  00F4               	movwf	___awdiv@divisor+1
  2950  02B8  0851               	movf	itostring@data+1,w
  2951  02B9  00F6               	movwf	___awdiv@dividend+1
  2952  02BA  0850               	movf	itostring@data,w
  2953  02BB  00F5               	movwf	___awdiv@dividend
  2954  02BC  3182  22D6  3181   	fcall	___awdiv
  2955  02BF  0874               	movf	?___awdiv+1,w
  2956  02C0  0020               	movlb	0	; select bank0
  2957  02C1  00D1               	movwf	itostring@data+1
  2958  02C2  0873               	movf	?___awdiv,w
  2959  02C3  00D0               	movwf	itostring@data
  2960  02C4                     l1948:	
  2961                           
  2962                           ;main.c: 293:     }
  2963  02C4  30FF               	movlw	255
  2964  02C5  07DF               	addwf	itostring@i,f
  2965  02C6  30FF               	movlw	255
  2966  02C7  3DE0               	addwfc	itostring@i+1,f
  2967  02C8                     l1950:	
  2968  02C8  0860               	movf	itostring@i+1,w
  2969  02C9  3A80               	xorlw	128
  2970  02CA  00D3               	movwf	??_itostring
  2971  02CB  3080               	movlw	128
  2972  02CC  0253               	subwf	??_itostring,w
  2973  02CD  1D03               	skipz
  2974  02CE  2AD1               	goto	u1845
  2975  02CF  3001               	movlw	1
  2976  02D0  025F               	subwf	itostring@i,w
  2977  02D1                     u1845:	
  2978  02D1  1803               	skipnc
  2979  02D2  2AD4               	goto	u1841
  2980  02D3  2AD5               	goto	u1840
  2981  02D4                     u1841:	
  2982  02D4  29F7               	goto	l1900
  2983  02D5                     u1840:	
  2984  02D5                     l259:	
  2985  02D5  0008               	return
  2986  02D6                     __end_of_itostring:	
  2987                           
  2988                           	psect	text8
  2989  03F2                     __ptext8:	
  2990 ;; *************** function ___awmod *****************
  2991 ;; Defined at:
  2992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  divisor         2    3[COMMON] int 
  2995 ;;  dividend        2    5[COMMON] int 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  sign            1    1[BANK0 ] unsigned char 
  2998 ;;  counter         1    0[BANK0 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2    3[COMMON] int 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;Total ram usage:        7 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    2
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_itostring
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function ___awmod
  3024  03F2                     ___awmod:	
  3025  03F2                     l1822:	
  3026                           ;incstack = 0
  3027                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3028                           
  3029  03F2  0020               	movlb	0	; select bank0
  3030  03F3  01CB               	clrf	___awmod@sign
  3031  03F4                     l1824:	
  3032  03F4  1FF6               	btfss	___awmod@dividend+1,7
  3033  03F5  2BF7               	goto	u1581
  3034  03F6  2BF8               	goto	u1580
  3035  03F7                     u1581:	
  3036  03F7  2BFF               	goto	l1830
  3037  03F8                     u1580:	
  3038  03F8                     l1826:	
  3039  03F8  09F5               	comf	___awmod@dividend,f
  3040  03F9  09F6               	comf	___awmod@dividend+1,f
  3041  03FA  0AF5               	incf	___awmod@dividend,f
  3042  03FB  1903               	skipnz
  3043  03FC  0AF6               	incf	___awmod@dividend+1,f
  3044  03FD                     l1828:	
  3045  03FD  01CB               	clrf	___awmod@sign
  3046  03FE  0ACB               	incf	___awmod@sign,f
  3047  03FF                     l1830:	
  3048  03FF  1FF4               	btfss	___awmod@divisor+1,7
  3049  0400  2C02               	goto	u1591
  3050  0401  2C03               	goto	u1590
  3051  0402                     u1591:	
  3052  0402  2C08               	goto	l1834
  3053  0403                     u1590:	
  3054  0403                     l1832:	
  3055  0403  09F3               	comf	___awmod@divisor,f
  3056  0404  09F4               	comf	___awmod@divisor+1,f
  3057  0405  0AF3               	incf	___awmod@divisor,f
  3058  0406  1903               	skipnz
  3059  0407  0AF4               	incf	___awmod@divisor+1,f
  3060  0408                     l1834:	
  3061  0408  0873               	movf	___awmod@divisor,w
  3062  0409  0474               	iorwf	___awmod@divisor+1,w
  3063  040A  1903               	btfsc	3,2
  3064  040B  2C0D               	goto	u1601
  3065  040C  2C0E               	goto	u1600
  3066  040D                     u1601:	
  3067  040D  2C37               	goto	l1852
  3068  040E                     u1600:	
  3069  040E                     l1836:	
  3070  040E  01CA               	clrf	___awmod@counter
  3071  040F  0ACA               	incf	___awmod@counter,f
  3072  0410  2C1A               	goto	l1842
  3073  0411                     l1838:	
  3074  0411  3001               	movlw	1
  3075  0412                     u1615:	
  3076  0412  35F3               	lslf	___awmod@divisor,f
  3077  0413  0DF4               	rlf	___awmod@divisor+1,f
  3078  0414  0B89               	decfsz	9,f
  3079  0415  2C12               	goto	u1615
  3080  0416                     l1840:	
  3081  0416  3001               	movlw	1
  3082  0417  00F7               	movwf	??___awmod
  3083  0418  0877               	movf	??___awmod,w
  3084  0419  07CA               	addwf	___awmod@counter,f
  3085  041A                     l1842:	
  3086  041A  1FF4               	btfss	___awmod@divisor+1,7
  3087  041B  2C1D               	goto	u1621
  3088  041C  2C1E               	goto	u1620
  3089  041D                     u1621:	
  3090  041D  2C11               	goto	l1838
  3091  041E                     u1620:	
  3092  041E                     l1844:	
  3093  041E  0874               	movf	___awmod@divisor+1,w
  3094  041F  0276               	subwf	___awmod@dividend+1,w
  3095  0420  1D03               	skipz
  3096  0421  2C24               	goto	u1635
  3097  0422  0873               	movf	___awmod@divisor,w
  3098  0423  0275               	subwf	___awmod@dividend,w
  3099  0424                     u1635:	
  3100  0424  1C03               	skipc
  3101  0425  2C27               	goto	u1631
  3102  0426  2C28               	goto	u1630
  3103  0427                     u1631:	
  3104  0427  2C2C               	goto	l1848
  3105  0428                     u1630:	
  3106  0428                     l1846:	
  3107  0428  0873               	movf	___awmod@divisor,w
  3108  0429  02F5               	subwf	___awmod@dividend,f
  3109  042A  0874               	movf	___awmod@divisor+1,w
  3110  042B  3BF6               	subwfb	___awmod@dividend+1,f
  3111  042C                     l1848:	
  3112  042C  3001               	movlw	1
  3113  042D                     u1645:	
  3114  042D  36F4               	lsrf	___awmod@divisor+1,f
  3115  042E  0CF3               	rrf	___awmod@divisor,f
  3116  042F  0B89               	decfsz	9,f
  3117  0430  2C2D               	goto	u1645
  3118  0431                     l1850:	
  3119  0431  3001               	movlw	1
  3120  0432  02CA               	subwf	___awmod@counter,f
  3121  0433  1D03               	btfss	3,2
  3122  0434  2C36               	goto	u1651
  3123  0435  2C37               	goto	u1650
  3124  0436                     u1651:	
  3125  0436  2C1E               	goto	l1844
  3126  0437                     u1650:	
  3127  0437                     l1852:	
  3128  0437  084B               	movf	___awmod@sign,w
  3129  0438  1903               	btfsc	3,2
  3130  0439  2C3B               	goto	u1661
  3131  043A  2C3C               	goto	u1660
  3132  043B                     u1661:	
  3133  043B  2C41               	goto	l1856
  3134  043C                     u1660:	
  3135  043C                     l1854:	
  3136  043C  09F5               	comf	___awmod@dividend,f
  3137  043D  09F6               	comf	___awmod@dividend+1,f
  3138  043E  0AF5               	incf	___awmod@dividend,f
  3139  043F  1903               	skipnz
  3140  0440  0AF6               	incf	___awmod@dividend+1,f
  3141  0441                     l1856:	
  3142  0441  0876               	movf	___awmod@dividend+1,w
  3143  0442  00F4               	movwf	?___awmod+1
  3144  0443  0875               	movf	___awmod@dividend,w
  3145  0444  00F3               	movwf	?___awmod
  3146  0445                     l516:	
  3147  0445  0008               	return
  3148  0446                     __end_of___awmod:	
  3149                           
  3150                           	psect	text9
  3151  02D6                     __ptext9:	
  3152 ;; *************** function ___awdiv *****************
  3153 ;; Defined at:
  3154 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  divisor         2    3[COMMON] int 
  3157 ;;  dividend        2    5[COMMON] int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  quotient        2    2[BANK0 ] int 
  3160 ;;  sign            1    1[BANK0 ] unsigned char 
  3161 ;;  counter         1    0[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2    3[COMMON] int 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;Total ram usage:        9 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_itostring
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function ___awdiv
  3187  02D6                     ___awdiv:	
  3188  02D6                     l1356:	
  3189                           ;incstack = 0
  3190                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3191                           
  3192  02D6  0020               	movlb	0	; select bank0
  3193  02D7  01CB               	clrf	___awdiv@sign
  3194  02D8                     l1358:	
  3195  02D8  1FF4               	btfss	___awdiv@divisor+1,7
  3196  02D9  2ADB               	goto	u811
  3197  02DA  2ADC               	goto	u810
  3198  02DB                     u811:	
  3199  02DB  2AE3               	goto	l1364
  3200  02DC                     u810:	
  3201  02DC                     l1360:	
  3202  02DC  09F3               	comf	___awdiv@divisor,f
  3203  02DD  09F4               	comf	___awdiv@divisor+1,f
  3204  02DE  0AF3               	incf	___awdiv@divisor,f
  3205  02DF  1903               	skipnz
  3206  02E0  0AF4               	incf	___awdiv@divisor+1,f
  3207  02E1                     l1362:	
  3208  02E1  01CB               	clrf	___awdiv@sign
  3209  02E2  0ACB               	incf	___awdiv@sign,f
  3210  02E3                     l1364:	
  3211  02E3  1FF6               	btfss	___awdiv@dividend+1,7
  3212  02E4  2AE6               	goto	u821
  3213  02E5  2AE7               	goto	u820
  3214  02E6                     u821:	
  3215  02E6  2AF0               	goto	l1370
  3216  02E7                     u820:	
  3217  02E7                     l1366:	
  3218  02E7  09F5               	comf	___awdiv@dividend,f
  3219  02E8  09F6               	comf	___awdiv@dividend+1,f
  3220  02E9  0AF5               	incf	___awdiv@dividend,f
  3221  02EA  1903               	skipnz
  3222  02EB  0AF6               	incf	___awdiv@dividend+1,f
  3223  02EC                     l1368:	
  3224  02EC  3001               	movlw	1
  3225  02ED  00F7               	movwf	??___awdiv
  3226  02EE  0877               	movf	??___awdiv,w
  3227  02EF  06CB               	xorwf	___awdiv@sign,f
  3228  02F0                     l1370:	
  3229  02F0  01CC               	clrf	___awdiv@quotient
  3230  02F1  01CD               	clrf	___awdiv@quotient+1
  3231  02F2                     l1372:	
  3232  02F2  0873               	movf	___awdiv@divisor,w
  3233  02F3  0474               	iorwf	___awdiv@divisor+1,w
  3234  02F4  1903               	btfsc	3,2
  3235  02F5  2AF7               	goto	u831
  3236  02F6  2AF8               	goto	u830
  3237  02F7                     u831:	
  3238  02F7  2B27               	goto	l1392
  3239  02F8                     u830:	
  3240  02F8                     l1374:	
  3241  02F8  01CA               	clrf	___awdiv@counter
  3242  02F9  0ACA               	incf	___awdiv@counter,f
  3243  02FA  2B04               	goto	l1380
  3244  02FB                     l1376:	
  3245  02FB  3001               	movlw	1
  3246  02FC                     u845:	
  3247  02FC  35F3               	lslf	___awdiv@divisor,f
  3248  02FD  0DF4               	rlf	___awdiv@divisor+1,f
  3249  02FE  0B89               	decfsz	9,f
  3250  02FF  2AFC               	goto	u845
  3251  0300                     l1378:	
  3252  0300  3001               	movlw	1
  3253  0301  00F7               	movwf	??___awdiv
  3254  0302  0877               	movf	??___awdiv,w
  3255  0303  07CA               	addwf	___awdiv@counter,f
  3256  0304                     l1380:	
  3257  0304  1FF4               	btfss	___awdiv@divisor+1,7
  3258  0305  2B07               	goto	u851
  3259  0306  2B08               	goto	u850
  3260  0307                     u851:	
  3261  0307  2AFB               	goto	l1376
  3262  0308                     u850:	
  3263  0308                     l1382:	
  3264  0308  3001               	movlw	1
  3265  0309                     u865:	
  3266  0309  35CC               	lslf	___awdiv@quotient,f
  3267  030A  0DCD               	rlf	___awdiv@quotient+1,f
  3268  030B  0B89               	decfsz	9,f
  3269  030C  2B09               	goto	u865
  3270  030D  0874               	movf	___awdiv@divisor+1,w
  3271  030E  0276               	subwf	___awdiv@dividend+1,w
  3272  030F  1D03               	skipz
  3273  0310  2B13               	goto	u875
  3274  0311  0873               	movf	___awdiv@divisor,w
  3275  0312  0275               	subwf	___awdiv@dividend,w
  3276  0313                     u875:	
  3277  0313  1C03               	skipc
  3278  0314  2B16               	goto	u871
  3279  0315  2B17               	goto	u870
  3280  0316                     u871:	
  3281  0316  2B1C               	goto	l1388
  3282  0317                     u870:	
  3283  0317                     l1384:	
  3284  0317  0873               	movf	___awdiv@divisor,w
  3285  0318  02F5               	subwf	___awdiv@dividend,f
  3286  0319  0874               	movf	___awdiv@divisor+1,w
  3287  031A  3BF6               	subwfb	___awdiv@dividend+1,f
  3288  031B                     l1386:	
  3289  031B  144C               	bsf	___awdiv@quotient,0
  3290  031C                     l1388:	
  3291  031C  3001               	movlw	1
  3292  031D                     u885:	
  3293  031D  36F4               	lsrf	___awdiv@divisor+1,f
  3294  031E  0CF3               	rrf	___awdiv@divisor,f
  3295  031F  0B89               	decfsz	9,f
  3296  0320  2B1D               	goto	u885
  3297  0321                     l1390:	
  3298  0321  3001               	movlw	1
  3299  0322  02CA               	subwf	___awdiv@counter,f
  3300  0323  1D03               	btfss	3,2
  3301  0324  2B26               	goto	u891
  3302  0325  2B27               	goto	u890
  3303  0326                     u891:	
  3304  0326  2B08               	goto	l1382
  3305  0327                     u890:	
  3306  0327                     l1392:	
  3307  0327  084B               	movf	___awdiv@sign,w
  3308  0328  1903               	btfsc	3,2
  3309  0329  2B2B               	goto	u901
  3310  032A  2B2C               	goto	u900
  3311  032B                     u901:	
  3312  032B  2B31               	goto	l1396
  3313  032C                     u900:	
  3314  032C                     l1394:	
  3315  032C  09CC               	comf	___awdiv@quotient,f
  3316  032D  09CD               	comf	___awdiv@quotient+1,f
  3317  032E  0ACC               	incf	___awdiv@quotient,f
  3318  032F  1903               	skipnz
  3319  0330  0ACD               	incf	___awdiv@quotient+1,f
  3320  0331                     l1396:	
  3321  0331  084D               	movf	___awdiv@quotient+1,w
  3322  0332  00F4               	movwf	?___awdiv+1
  3323  0333  084C               	movf	___awdiv@quotient,w
  3324  0334  00F3               	movwf	?___awdiv
  3325  0335                     l503:	
  3326  0335  0008               	return
  3327  0336                     __end_of___awdiv:	
  3328                           
  3329                           	psect	text10
  3330  04FB                     __ptext10:	
  3331 ;; *************** function _SetVol *****************
  3332 ;; Defined at:
  3333 ;;		line 215 in file "main.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  ch              1    wreg     unsigned char 
  3336 ;;  vol_data        1    3[COMMON] unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  ch              1    4[COMMON] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3348 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    2
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _SetVol
  3364  04FB                     _SetVol:	
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _SetVol: [wreg+status,2+status,0]
  3368                           ;SetVol@ch stored from wreg
  3369  04FB  00F4               	movwf	SetVol@ch
  3370  04FC                     l1466:	
  3371                           
  3372                           ;main.c: 215: void SetVol(uint8_t ch, uint8_t vol_data);main.c: 216: {;main.c: 217:     
      +                          PORTCbits.RC4 = 0;
  3373  04FC  0020               	movlb	0	; select bank0
  3374  04FD  120E               	bcf	14,4	;volatile
  3375  04FE                     l1468:	
  3376                           
  3377                           ;main.c: 218:     SSP1BUF = ch-1;
  3378  04FE  0874               	movf	SetVol@ch,w
  3379  04FF  3EFF               	addlw	255
  3380  0500  0024               	movlb	4	; select bank4
  3381  0501  0091               	movwf	17	;volatile
  3382  0502                     l225:	
  3383                           ;main.c: 219:     while(!SSP1STATbits.BF);
  3384                           
  3385  0502  1C14               	btfss	20,0	;volatile
  3386  0503  2D05               	goto	u1011
  3387  0504  2D06               	goto	u1010
  3388  0505                     u1011:	
  3389  0505  2D02               	goto	l225
  3390  0506                     u1010:	
  3391  0506                     l1470:	
  3392                           
  3393                           ;main.c: 220:     SSP1BUF = vol_data;
  3394  0506  0873               	movf	SetVol@vol_data,w
  3395  0507  0091               	movwf	17	;volatile
  3396  0508                     l228:	
  3397                           ;main.c: 221:     while(!SSP1STATbits.BF);
  3398                           
  3399  0508  1C14               	btfss	20,0	;volatile
  3400  0509  2D0B               	goto	u1021
  3401  050A  2D0C               	goto	u1020
  3402  050B                     u1021:	
  3403  050B  2D08               	goto	l228
  3404  050C                     u1020:	
  3405  050C                     l230:	
  3406                           
  3407                           ;main.c: 222:     PORTCbits.RC4 = 1;
  3408  050C  0020               	movlb	0	; select bank0
  3409  050D  160E               	bsf	14,4	;volatile
  3410  050E                     l231:	
  3411  050E  0008               	return
  3412  050F                     __end_of_SetVol:	
  3413                           
  3414                           	psect	text11
  3415  0542                     __ptext11:	
  3416 ;; *************** function _SYSTEM_Initialize *****************
  3417 ;; Defined at:
  3418 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    3
  3439 ;; This function calls:
  3440 ;;		_OSCILLATOR_Initialize
  3441 ;;		_PIN_MANAGER_Initialize
  3442 ;;		_WDT_Initialize
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function _SYSTEM_Initialize
  3450  0542                     _SYSTEM_Initialize:	
  3451  0542                     l1438:	
  3452                           ;incstack = 0
  3453                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3454                           
  3455                           
  3456                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3457  0542  3184  2470  3185   	fcall	_PIN_MANAGER_Initialize
  3458                           
  3459                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3460  0545  3185  254C  3185   	fcall	_OSCILLATOR_Initialize
  3461                           
  3462                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3463  0548  3185  255A  3185   	fcall	_WDT_Initialize
  3464  054B                     l19:	
  3465  054B  0008               	return
  3466  054C                     __end_of_SYSTEM_Initialize:	
  3467                           
  3468                           	psect	text12
  3469  055A                     __ptext12:	
  3470 ;; *************** function _WDT_Initialize *****************
  3471 ;; Defined at:
  3472 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    2
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_SYSTEM_Initialize
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _WDT_Initialize
  3502  055A                     _WDT_Initialize:	
  3503  055A                     l1346:	
  3504                           ;incstack = 0
  3505                           ; Regs used in _WDT_Initialize: [wreg]
  3506                           
  3507                           
  3508                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3509  055A  3016               	movlw	22
  3510  055B  0021               	movlb	1	; select bank1
  3511  055C  0097               	movwf	23	;volatile
  3512  055D                     l25:	
  3513  055D  0008               	return
  3514  055E                     __end_of_WDT_Initialize:	
  3515                           
  3516                           	psect	text13
  3517  0470                     __ptext13:	
  3518 ;; *************** function _PIN_MANAGER_Initialize *****************
  3519 ;; Defined at:
  3520 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    2
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_SYSTEM_Initialize
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _PIN_MANAGER_Initialize
  3550  0470                     _PIN_MANAGER_Initialize:	
  3551  0470                     l1314:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3554                           
  3555                           
  3556                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3557  0470  0022               	movlb	2	; select bank2
  3558  0471  018C               	clrf	12	;volatile
  3559                           
  3560                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3561  0472  018D               	clrf	13	;volatile
  3562                           
  3563                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3564  0473  018E               	clrf	14	;volatile
  3565  0474                     l1316:	
  3566                           
  3567                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x33;
  3568  0474  3033               	movlw	51
  3569  0475  0021               	movlb	1	; select bank1
  3570  0476  008C               	movwf	12	;volatile
  3571  0477                     l1318:	
  3572                           
  3573                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x00;
  3574  0477  018D               	clrf	13	;volatile
  3575                           
  3576                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x0F;
  3577  0478  300F               	movlw	15
  3578  0479  008E               	movwf	14	;volatile
  3579                           
  3580                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0E;
  3581  047A  300E               	movlw	14
  3582  047B  0023               	movlb	3	; select bank3
  3583  047C  008E               	movwf	14	;volatile
  3584  047D                     l1320:	
  3585                           
  3586                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3587  047D  018D               	clrf	13	;volatile
  3588  047E                     l1322:	
  3589                           
  3590                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  3591  047E  3003               	movlw	3
  3592  047F  008C               	movwf	12	;volatile
  3593                           
  3594                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3595  0480  0024               	movlb	4	; select bank4
  3596  0481  018D               	clrf	13	;volatile
  3597                           
  3598                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3599  0482  018C               	clrf	12	;volatile
  3600                           
  3601                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3602  0483  018E               	clrf	14	;volatile
  3603  0484                     l1324:	
  3604                           
  3605                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3606  0484  0021               	movlb	1	; select bank1
  3607  0485  1795               	bsf	21,7	;volatile
  3608                           
  3609                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  3610  0486  0025               	movlb	5	; select bank5
  3611  0487  018C               	clrf	12	;volatile
  3612                           
  3613                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  3614  0488  018D               	clrf	13	;volatile
  3615                           
  3616                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  3617  0489  018E               	clrf	14	;volatile
  3618  048A                     l1326:	
  3619                           
  3620                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  3621  048A  3037               	movlw	55
  3622  048B  0026               	movlb	6	; select bank6
  3623  048C  008C               	movwf	12	;volatile
  3624  048D                     l1328:	
  3625                           
  3626                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  3627  048D  30F0               	movlw	240
  3628  048E  008D               	movwf	13	;volatile
  3629  048F                     l1330:	
  3630                           
  3631                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  3632  048F  30FF               	movlw	255
  3633  0490  008E               	movwf	14	;volatile
  3634  0491                     l1332:	
  3635                           
  3636                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  3637  0491  303F               	movlw	63
  3638  0492  0027               	movlb	7	; select bank7
  3639  0493  008C               	movwf	12	;volatile
  3640  0494                     l1334:	
  3641                           
  3642                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  3643  0494  30F0               	movlw	240
  3644  0495  008D               	movwf	13	;volatile
  3645  0496                     l1336:	
  3646                           
  3647                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  3648  0496  30FF               	movlw	255
  3649  0497  008E               	movwf	14	;volatile
  3650  0498                     l72:	
  3651  0498  0008               	return
  3652  0499                     __end_of_PIN_MANAGER_Initialize:	
  3653                           
  3654                           	psect	text14
  3655  054C                     __ptext14:	
  3656 ;; *************** function _OSCILLATOR_Initialize *****************
  3657 ;; Defined at:
  3658 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    2
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_SYSTEM_Initialize
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _OSCILLATOR_Initialize
  3688  054C                     _OSCILLATOR_Initialize:	
  3689  054C                     l1338:	
  3690                           ;incstack = 0
  3691                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3692                           
  3693                           
  3694                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  3695  054C  3070               	movlw	112
  3696  054D  0021               	movlb	1	; select bank1
  3697  054E  0099               	movwf	25	;volatile
  3698  054F                     l1340:	
  3699                           
  3700                           ;mcc_generated_files/mcc.c: 63:     OSCSTAT = 0x00;
  3701  054F  019A               	clrf	26	;volatile
  3702  0550                     l1342:	
  3703                           
  3704                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3705  0550  0198               	clrf	24	;volatile
  3706  0551                     l1344:	
  3707                           
  3708                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3709  0551  0024               	movlb	4	; select bank4
  3710  0552  019D               	clrf	29	;volatile
  3711  0553                     l22:	
  3712  0553  0008               	return
  3713  0554                     __end_of_OSCILLATOR_Initialize:	
  3714                           
  3715                           	psect	intentry
  3716  0004                     __pintentry:	
  3717 ;; *************** function _isr *****************
  3718 ;; Defined at:
  3719 ;;		line 91 in file "main.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;Total ram usage:        2 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		_DownVol
  3742 ;;		_UpVol
  3743 ;; This function is called by:
  3744 ;;		Interrupt level 1
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748  0004                     _isr:	
  3749                           
  3750                           ;incstack = 0
  3751  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3752                           
  3753                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3754  0005  3180               	pagesel	$
  3755  0006                     i1l1610:	
  3756                           
  3757                           ;main.c: 93:     INTCONbits.GIE = 0;
  3758  0006  138B               	bcf	11,7	;volatile
  3759                           
  3760                           ;main.c: 96:     if(IOCAFbits.IOCAF4 && vol!=127)
  3761  0007  0027               	movlb	7	; select bank7
  3762  0008  1E13               	btfss	19,4	;volatile
  3763  0009  280B               	goto	u123_21
  3764  000A  280C               	goto	u123_20
  3765  000B                     u123_21:	
  3766  000B  281B               	goto	i1l182
  3767  000C                     u123_20:	
  3768  000C                     i1l1612:	
  3769  000C  307F               	movlw	127
  3770  000D  067A               	xorwf	_vol,w
  3771  000E  1903               	btfsc	3,2
  3772  000F  2811               	goto	u124_21
  3773  0010  2812               	goto	u124_20
  3774  0011                     u124_21:	
  3775  0011  281B               	goto	i1l182
  3776  0012                     u124_20:	
  3777  0012                     i1l1614:	
  3778                           
  3779                           ;main.c: 97:     {;main.c: 98:         if(PORTAbits.RA5)
  3780  0012  0020               	movlb	0	; select bank0
  3781  0013  1E8C               	btfss	12,5	;volatile
  3782  0014  2816               	goto	u125_21
  3783  0015  2817               	goto	u125_20
  3784  0016                     u125_21:	
  3785  0016  282C               	goto	i1l1624
  3786  0017                     u125_20:	
  3787  0017                     i1l1616:	
  3788                           
  3789                           ;main.c: 99:             UpVol();
  3790  0017  3184  24E5  3180   	fcall	_UpVol
  3791  001A  282C               	goto	i1l1624
  3792  001B                     i1l182:	
  3793                           ;main.c: 101:     else if(IOCAFbits.IOCAF5 && vol!=0)
  3794                           
  3795  001B  1E93               	btfss	19,5	;volatile
  3796  001C  281E               	goto	u126_21
  3797  001D  281F               	goto	u126_20
  3798  001E                     u126_21:	
  3799  001E  282C               	goto	i1l1624
  3800  001F                     u126_20:	
  3801  001F                     i1l1618:	
  3802  001F  087A               	movf	_vol,w
  3803  0020  1903               	btfsc	3,2
  3804  0021  2823               	goto	u127_21
  3805  0022  2824               	goto	u127_20
  3806  0023                     u127_21:	
  3807  0023  282C               	goto	i1l1624
  3808  0024                     u127_20:	
  3809  0024                     i1l1620:	
  3810                           
  3811                           ;main.c: 102:     {;main.c: 103:         if(PORTAbits.RA4)
  3812  0024  0020               	movlb	0	; select bank0
  3813  0025  1E0C               	btfss	12,4	;volatile
  3814  0026  2828               	goto	u128_21
  3815  0027  2829               	goto	u128_20
  3816  0028                     u128_21:	
  3817  0028  282C               	goto	i1l1624
  3818  0029                     u128_20:	
  3819  0029                     i1l1622:	
  3820                           
  3821                           ;main.c: 104:             DownVol();
  3822  0029  3185  250F  3180   	fcall	_DownVol
  3823  002C                     i1l1624:	
  3824                           
  3825                           ;main.c: 106:     IOCAF = 0;
  3826  002C  0027               	movlb	7	; select bank7
  3827  002D  0193               	clrf	19	;volatile
  3828  002E                     i1l1626:	
  3829                           
  3830                           ;main.c: 109:     if(IOCCFbits.IOCCF0)
  3831  002E  1C19               	btfss	25,0	;volatile
  3832  002F  2831               	goto	u129_21
  3833  0030  2832               	goto	u129_20
  3834  0031                     u129_21:	
  3835  0031  28DE               	goto	i1l187
  3836  0032                     u129_20:	
  3837  0032                     i1l1628:	
  3838                           
  3839                           ;main.c: 110:     {;main.c: 111:         IOCCFbits.IOCCF0 = 0;
  3840  0032  1019               	bcf	25,0	;volatile
  3841                           
  3842                           ;main.c: 112:         switch(state){
  3843  0033  28C7               	goto	i1l1696
  3844  0034                     i1l189:	
  3845                           ;main.c: 113:             case 0:
  3846                           
  3847                           
  3848                           ;main.c: 114:                 TMR1 = 57536;
  3849  0034  30E0               	movlw	224
  3850  0035  0097               	movwf	23	;volatile
  3851  0036  30C0               	movlw	192
  3852  0037  0096               	movwf	22	;volatile
  3853                           
  3854                           ;main.c: 115:                 T1CONbits.TMR1ON = 1;
  3855  0038  1418               	bsf	24,0	;volatile
  3856                           
  3857                           ;main.c: 116:                 break;
  3858  0039  298F               	goto	i1l206
  3859  003A                     i1l1630:	
  3860                           
  3861                           ;main.c: 119:                 state = 2;
  3862  003A  3002               	movlw	2
  3863  003B  00E2               	movwf	_state
  3864  003C  3000               	movlw	0
  3865  003D  00E3               	movwf	_state+1
  3866  003E                     i1l1632:	
  3867                           
  3868                           ;main.c: 120:                 IOCCPbits.IOCCP0 = 0;
  3869  003E  0027               	movlb	7	; select bank7
  3870  003F  1017               	bcf	23,0	;volatile
  3871  0040                     i1l1634:	
  3872                           
  3873                           ;main.c: 121:                 IOCCNbits.IOCCN0 = 1;
  3874  0040  1418               	bsf	24,0	;volatile
  3875  0041                     i1l1636:	
  3876                           
  3877                           ;main.c: 122:                 TMR1 = 0;
  3878  0041  0020               	movlb	0	; select bank0
  3879  0042  0196               	clrf	22	;volatile
  3880  0043  0197               	clrf	23	;volatile
  3881  0044                     i1l1638:	
  3882                           
  3883                           ;main.c: 123:                 T1CONbits.TMR1ON = 1;
  3884  0044  1418               	bsf	24,0	;volatile
  3885                           
  3886                           ;main.c: 124:                 break;
  3887  0045  298F               	goto	i1l206
  3888  0046                     i1l192:	
  3889                           ;main.c: 126:             case 2:
  3890                           
  3891                           
  3892                           ;main.c: 127:                 T1CONbits.TMR1ON = 0;
  3893  0046  1018               	bcf	24,0	;volatile
  3894  0047                     i1l1640:	
  3895                           
  3896                           ;main.c: 128:                 if(TMR1>1800 && TMR1<2600)
  3897  0047  3007               	movlw	7
  3898  0048  0217               	subwf	23,w	;volatile
  3899  0049  3009               	movlw	9
  3900  004A  1903               	skipnz
  3901  004B  0216               	subwf	22,w	;volatile
  3902  004C  1C03               	skipc
  3903  004D  284F               	goto	u130_21
  3904  004E  2850               	goto	u130_20
  3905  004F                     u130_21:	
  3906  004F  287F               	goto	i1l1660
  3907  0050                     u130_20:	
  3908  0050                     i1l1642:	
  3909  0050  300A               	movlw	10
  3910  0051  0217               	subwf	23,w	;volatile
  3911  0052  3028               	movlw	40
  3912  0053  1903               	skipnz
  3913  0054  0216               	subwf	22,w	;volatile
  3914  0055  1803               	skipnc
  3915  0056  2858               	goto	u131_21
  3916  0057  2859               	goto	u131_20
  3917  0058                     u131_21:	
  3918  0058  287F               	goto	i1l1660
  3919  0059                     u131_20:	
  3920  0059                     i1l1644:	
  3921                           
  3922                           ;main.c: 129:                 {;main.c: 130:                     dataReg = preReg1;
  3923  0059  0868               	movf	_preReg1,w
  3924  005A  00F1               	movwf	??_isr
  3925  005B  0871               	movf	??_isr,w
  3926  005C  00E4               	movwf	_dataReg
  3927  005D                     i1l1646:	
  3928                           
  3929                           ;main.c: 131:                     if(dataReg==0x87 && vol!=127)
  3930  005D  3087               	movlw	135
  3931  005E  0664               	xorwf	_dataReg,w
  3932  005F  1D03               	btfss	3,2
  3933  0060  2862               	goto	u132_21
  3934  0061  2863               	goto	u132_20
  3935  0062                     u132_21:	
  3936  0062  286D               	goto	i1l1652
  3937  0063                     u132_20:	
  3938  0063                     i1l1648:	
  3939  0063  307F               	movlw	127
  3940  0064  067A               	xorwf	_vol,w
  3941  0065  1903               	btfsc	3,2
  3942  0066  2868               	goto	u133_21
  3943  0067  2869               	goto	u133_20
  3944  0068                     u133_21:	
  3945  0068  286D               	goto	i1l1652
  3946  0069                     u133_20:	
  3947  0069                     i1l1650:	
  3948                           
  3949                           ;main.c: 132:                         UpVol();
  3950  0069  3184  24E5  3180   	fcall	_UpVol
  3951  006C  287B               	goto	i1l1658
  3952  006D                     i1l1652:	
  3953  006D  30A7               	movlw	167
  3954  006E  0664               	xorwf	_dataReg,w
  3955  006F  1D03               	btfss	3,2
  3956  0070  2872               	goto	u134_21
  3957  0071  2873               	goto	u134_20
  3958  0072                     u134_21:	
  3959  0072  287B               	goto	i1l1658
  3960  0073                     u134_20:	
  3961  0073                     i1l1654:	
  3962  0073  087A               	movf	_vol,w
  3963  0074  1903               	btfsc	3,2
  3964  0075  2877               	goto	u135_21
  3965  0076  2878               	goto	u135_20
  3966  0077                     u135_21:	
  3967  0077  287B               	goto	i1l1658
  3968  0078                     u135_20:	
  3969  0078                     i1l1656:	
  3970                           
  3971                           ;main.c: 134:                         DownVol();
  3972  0078  3185  250F  3180   	fcall	_DownVol
  3973  007B                     i1l1658:	
  3974                           
  3975                           ;main.c: 135:                     state = 0;
  3976  007B  0020               	movlb	0	; select bank0
  3977  007C  01E2               	clrf	_state
  3978  007D  01E3               	clrf	_state+1
  3979                           
  3980                           ;main.c: 136:                 }
  3981  007E  298F               	goto	i1l206
  3982  007F                     i1l1660:	
  3983  007F  300F               	movlw	15
  3984  0080  0217               	subwf	23,w	;volatile
  3985  0081  30A1               	movlw	161
  3986  0082  1903               	skipnz
  3987  0083  0216               	subwf	22,w	;volatile
  3988  0084  1C03               	skipc
  3989  0085  2887               	goto	u136_21
  3990  0086  2888               	goto	u136_20
  3991  0087                     u136_21:	
  3992  0087  298F               	goto	i1l206
  3993  0088                     u136_20:	
  3994  0088                     i1l1662:	
  3995                           
  3996                           ;main.c: 138:                 {;main.c: 139:                     IOCCPbits.IOCCP0 = 1;
  3997  0088  0027               	movlb	7	; select bank7
  3998  0089  1417               	bsf	23,0	;volatile
  3999                           
  4000                           ;main.c: 140:                     IOCCNbits.IOCCN0 = 0;
  4001  008A  1018               	bcf	24,0	;volatile
  4002  008B                     i1l1664:	
  4003                           
  4004                           ;main.c: 141:                     state = 3;
  4005  008B  3003               	movlw	3
  4006  008C  0020               	movlb	0	; select bank0
  4007  008D  00E2               	movwf	_state
  4008  008E  3000               	movlw	0
  4009  008F  00E3               	movwf	_state+1
  4010  0090  298F               	goto	i1l206
  4011  0091                     i1l1666:	
  4012                           
  4013                           ;main.c: 146:                 if(cnt_bit==31)
  4014  0091  301F               	movlw	31
  4015  0092  0678               	xorwf	_cnt_bit,w
  4016  0093  0479               	iorwf	_cnt_bit+1,w
  4017  0094  1D03               	btfss	3,2
  4018  0095  2897               	goto	u137_21
  4019  0096  2898               	goto	u137_20
  4020  0097                     u137_21:	
  4021  0097  289C               	goto	i1l1670
  4022  0098                     u137_20:	
  4023  0098                     i1l1668:	
  4024                           
  4025                           ;main.c: 147:                 {;main.c: 148:                     preReg4 = 0;
  4026  0098  01E5               	clrf	_preReg4
  4027                           
  4028                           ;main.c: 149:                     preReg3 = 0;
  4029  0099  01E6               	clrf	_preReg3
  4030                           
  4031                           ;main.c: 150:                     preReg2 = 0;
  4032  009A  01E7               	clrf	_preReg2
  4033                           
  4034                           ;main.c: 151:                     preReg1 = 0;
  4035  009B  01E8               	clrf	_preReg1
  4036  009C                     i1l1670:	
  4037                           
  4038                           ;main.c: 153:                 TMR1 = 64636;
  4039  009C  30FC               	movlw	252
  4040  009D  0097               	movwf	23	;volatile
  4041  009E  307C               	movlw	124
  4042  009F  0096               	movwf	22	;volatile
  4043  00A0                     i1l1672:	
  4044                           
  4045                           ;main.c: 154:                 T1CONbits.TMR1ON = 1;
  4046  00A0  1418               	bsf	24,0	;volatile
  4047                           
  4048                           ;main.c: 155:                 break;
  4049  00A1  298F               	goto	i1l206
  4050  00A2                     i1l1674:	
  4051                           
  4052                           ;main.c: 158:                 cnt_bit = 31;
  4053  00A2  301F               	movlw	31
  4054  00A3  00F8               	movwf	_cnt_bit
  4055  00A4  3000               	movlw	0
  4056  00A5  00F9               	movwf	_cnt_bit+1
  4057  00A6                     i1l1676:	
  4058                           
  4059                           ;main.c: 159:                 IOCCPbits.IOCCP0 = 0;
  4060  00A6  0027               	movlb	7	; select bank7
  4061  00A7  1017               	bcf	23,0	;volatile
  4062  00A8                     i1l1678:	
  4063                           
  4064                           ;main.c: 160:                 IOCCNbits.IOCCN0 = 1;
  4065  00A8  1418               	bsf	24,0	;volatile
  4066                           
  4067                           ;main.c: 161:                 dataReg = preReg1;
  4068  00A9  0020               	movlb	0	; select bank0
  4069  00AA  0868               	movf	_preReg1,w
  4070  00AB  00F1               	movwf	??_isr
  4071  00AC  0871               	movf	??_isr,w
  4072  00AD  00E4               	movwf	_dataReg
  4073  00AE                     i1l1680:	
  4074                           
  4075                           ;main.c: 162:                 if(dataReg==0x87 && vol!=127)
  4076  00AE  3087               	movlw	135
  4077  00AF  0664               	xorwf	_dataReg,w
  4078  00B0  1D03               	btfss	3,2
  4079  00B1  28B3               	goto	u138_21
  4080  00B2  28B4               	goto	u138_20
  4081  00B3                     u138_21:	
  4082  00B3  28BB               	goto	i1l1686
  4083  00B4                     u138_20:	
  4084  00B4                     i1l1682:	
  4085  00B4  307F               	movlw	127
  4086  00B5  067A               	xorwf	_vol,w
  4087  00B6  1903               	btfsc	3,2
  4088  00B7  28B9               	goto	u139_21
  4089  00B8  28BA               	goto	u139_20
  4090  00B9                     u139_21:	
  4091  00B9  28BB               	goto	i1l1686
  4092  00BA                     u139_20:	
  4093  00BA  2869               	goto	i1l1650
  4094  00BB                     i1l1686:	
  4095  00BB  30A7               	movlw	167
  4096  00BC  0664               	xorwf	_dataReg,w
  4097  00BD  1D03               	btfss	3,2
  4098  00BE  28C0               	goto	u140_21
  4099  00BF  28C1               	goto	u140_20
  4100  00C0                     u140_21:	
  4101  00C0  287B               	goto	i1l1658
  4102  00C1                     u140_20:	
  4103  00C1                     i1l1688:	
  4104  00C1  087A               	movf	_vol,w
  4105  00C2  1903               	btfsc	3,2
  4106  00C3  28C5               	goto	u141_21
  4107  00C4  28C6               	goto	u141_20
  4108  00C5                     u141_21:	
  4109  00C5  287B               	goto	i1l1658
  4110  00C6                     u141_20:	
  4111  00C6  2878               	goto	i1l1656
  4112  00C7                     i1l1696:	
  4113                           
  4114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4115                           ; Switch size 1, requested type "simple"
  4116                           ; Number of cases is 1, Range of values is 0 to 0
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte            4     3 (average)
  4120                           ; direct_byte            8     6 (fixed)
  4121                           ; jumptable            260     6 (fixed)
  4122                           ;	Chosen strategy is simple_byte
  4123  00C7  0020               	movlb	0	; select bank0
  4124  00C8  0863               	movf	_state+1,w
  4125  00C9  3A00               	xorlw	0	; case 0
  4126  00CA  1903               	skipnz
  4127  00CB  28CD               	goto	i1l2068
  4128  00CC  298F               	goto	i1l206
  4129  00CD                     i1l2068:	
  4130                           
  4131                           ; Switch size 1, requested type "simple"
  4132                           ; Number of cases is 5, Range of values is 0 to 4
  4133                           ; switch strategies available:
  4134                           ; Name         Instructions Cycles
  4135                           ; direct_byte           16     6 (fixed)
  4136                           ; simple_byte           16     9 (average)
  4137                           ; jumptable            260     6 (fixed)
  4138                           ;	Chosen strategy is simple_byte
  4139  00CD  0862               	movf	_state,w
  4140  00CE  3A00               	xorlw	0	; case 0
  4141  00CF  1903               	skipnz
  4142  00D0  2834               	goto	i1l189
  4143  00D1  3A01               	xorlw	1	; case 1
  4144  00D2  1903               	skipnz
  4145  00D3  283A               	goto	i1l1630
  4146  00D4  3A03               	xorlw	3	; case 2
  4147  00D5  1903               	skipnz
  4148  00D6  2846               	goto	i1l192
  4149  00D7  3A01               	xorlw	1	; case 3
  4150  00D8  1903               	skipnz
  4151  00D9  2891               	goto	i1l1666
  4152  00DA  3A07               	xorlw	7	; case 4
  4153  00DB  1903               	skipnz
  4154  00DC  28A2               	goto	i1l1674
  4155  00DD  298F               	goto	i1l206
  4156  00DE                     i1l187:	
  4157                           ;main.c: 174:     else if(PIR1bits.TMR1IF)
  4158                           
  4159  00DE  0020               	movlb	0	; select bank0
  4160  00DF  1C11               	btfss	17,0	;volatile
  4161  00E0  28E2               	goto	u142_21
  4162  00E1  28E3               	goto	u142_20
  4163  00E2                     u142_21:	
  4164  00E2  298F               	goto	i1l206
  4165  00E3                     u142_20:	
  4166  00E3                     i1l1698:	
  4167                           
  4168                           ;main.c: 175:     {;main.c: 176:         PIR1bits.TMR1IF = 0;
  4169  00E3  1011               	bcf	17,0	;volatile
  4170                           
  4171                           ;main.c: 177:         switch(state)
  4172  00E4  2982               	goto	i1l1734
  4173  00E5                     i1l209:	
  4174                           ;main.c: 178:         {;main.c: 179:             case 0:
  4175                           
  4176                           
  4177                           ;main.c: 180:                 T1CONbits.TMR1ON = 0;
  4178  00E5  1018               	bcf	24,0	;volatile
  4179                           
  4180                           ;main.c: 181:                 if(!PORTCbits.RC0)
  4181  00E6  180E               	btfsc	14,0	;volatile
  4182  00E7  28E9               	goto	u143_21
  4183  00E8  28EA               	goto	u143_20
  4184  00E9                     u143_21:	
  4185  00E9  298F               	goto	i1l206
  4186  00EA                     u143_20:	
  4187  00EA                     i1l1700:	
  4188                           
  4189                           ;main.c: 182:                 {;main.c: 183:                     state = 1;
  4190  00EA  3001               	movlw	1
  4191  00EB  00E2               	movwf	_state
  4192  00EC  3000               	movlw	0
  4193  00ED  00E3               	movwf	_state+1
  4194  00EE                     i1l1702:	
  4195                           
  4196                           ;main.c: 184:                     IOCCPbits.IOCCP0 = 1;
  4197  00EE  0027               	movlb	7	; select bank7
  4198  00EF  1417               	bsf	23,0	;volatile
  4199  00F0                     i1l1704:	
  4200                           
  4201                           ;main.c: 185:                     IOCCNbits.IOCCN0 = 0;
  4202  00F0  1018               	bcf	24,0	;volatile
  4203  00F1  298F               	goto	i1l206
  4204  00F2                     i1l212:	
  4205                           ;main.c: 189:             case 3:
  4206                           
  4207                           
  4208                           ;main.c: 190:                 if(PORTCbits.RC0){
  4209  00F2  1C0E               	btfss	14,0	;volatile
  4210  00F3  28F5               	goto	u144_21
  4211  00F4  28F6               	goto	u144_20
  4212  00F5                     u144_21:	
  4213  00F5  2970               	goto	i1l1724
  4214  00F6                     u144_20:	
  4215  00F6                     i1l1706:	
  4216                           
  4217                           ;main.c: 191:                     if(cnt_bit>23)
  4218  00F6  0879               	movf	_cnt_bit+1,w
  4219  00F7  3A80               	xorlw	128
  4220  00F8  00F1               	movwf	??_isr
  4221  00F9  3080               	movlw	128
  4222  00FA  0271               	subwf	??_isr,w
  4223  00FB  1D03               	skipz
  4224  00FC  28FF               	goto	u145_25
  4225  00FD  3018               	movlw	24
  4226  00FE  0278               	subwf	_cnt_bit,w
  4227  00FF                     u145_25:	
  4228  00FF  1C03               	skipc
  4229  0100  2902               	goto	u145_21
  4230  0101  2903               	goto	u145_20
  4231  0102                     u145_21:	
  4232  0102  2912               	goto	i1l1710
  4233  0103                     u145_20:	
  4234  0103                     i1l1708:	
  4235                           
  4236                           ;main.c: 192:                         preReg4 |= 1 << (cnt_bit-24);
  4237  0103  3001               	movlw	1
  4238  0104  00F1               	movwf	??_isr
  4239  0105  0878               	movf	_cnt_bit,w
  4240  0106  3EE8               	addlw	-24
  4241  0107  0A89               	incf	9,f
  4242  0108  290A               	goto	u146_24
  4243  0109                     u146_25:	
  4244  0109  35F1               	lslf	??_isr,f
  4245  010A                     u146_24:	
  4246  010A  0B89               	decfsz	9,f
  4247  010B  2909               	goto	u146_25
  4248  010C  0871               	movf	??_isr,w
  4249  010D  00F2               	movwf	??_isr+1
  4250  010E  0872               	movf	??_isr+1,w
  4251  010F  0020               	movlb	0	; select bank0
  4252  0110  04E5               	iorwf	_preReg4,f
  4253  0111  2970               	goto	i1l1724
  4254  0112                     i1l1710:	
  4255  0112  0879               	movf	_cnt_bit+1,w
  4256  0113  3A80               	xorlw	128
  4257  0114  00F1               	movwf	??_isr
  4258  0115  3080               	movlw	128
  4259  0116  0271               	subwf	??_isr,w
  4260  0117  1D03               	skipz
  4261  0118  291B               	goto	u147_25
  4262  0119  3018               	movlw	24
  4263  011A  0278               	subwf	_cnt_bit,w
  4264  011B                     u147_25:	
  4265  011B  1803               	skipnc
  4266  011C  291E               	goto	u147_21
  4267  011D  291F               	goto	u147_20
  4268  011E                     u147_21:	
  4269  011E  293B               	goto	i1l1716
  4270  011F                     u147_20:	
  4271  011F                     i1l1712:	
  4272  011F  0879               	movf	_cnt_bit+1,w
  4273  0120  3A80               	xorlw	128
  4274  0121  00F1               	movwf	??_isr
  4275  0122  3080               	movlw	128
  4276  0123  0271               	subwf	??_isr,w
  4277  0124  1D03               	skipz
  4278  0125  2928               	goto	u148_25
  4279  0126  3010               	movlw	16
  4280  0127  0278               	subwf	_cnt_bit,w
  4281  0128                     u148_25:	
  4282  0128  1C03               	skipc
  4283  0129  292B               	goto	u148_21
  4284  012A  292C               	goto	u148_20
  4285  012B                     u148_21:	
  4286  012B  293B               	goto	i1l1716
  4287  012C                     u148_20:	
  4288  012C                     i1l1714:	
  4289                           
  4290                           ;main.c: 194:                         preReg3 |= 1 << (cnt_bit-16);
  4291  012C  3001               	movlw	1
  4292  012D  00F1               	movwf	??_isr
  4293  012E  0878               	movf	_cnt_bit,w
  4294  012F  3EF0               	addlw	-16
  4295  0130  0A89               	incf	9,f
  4296  0131  2933               	goto	u149_24
  4297  0132                     u149_25:	
  4298  0132  35F1               	lslf	??_isr,f
  4299  0133                     u149_24:	
  4300  0133  0B89               	decfsz	9,f
  4301  0134  2932               	goto	u149_25
  4302  0135  0871               	movf	??_isr,w
  4303  0136  00F2               	movwf	??_isr+1
  4304  0137  0872               	movf	??_isr+1,w
  4305  0138  0020               	movlb	0	; select bank0
  4306  0139  04E6               	iorwf	_preReg3,f
  4307  013A  2970               	goto	i1l1724
  4308  013B                     i1l1716:	
  4309  013B  0879               	movf	_cnt_bit+1,w
  4310  013C  3A80               	xorlw	128
  4311  013D  00F1               	movwf	??_isr
  4312  013E  3080               	movlw	128
  4313  013F  0271               	subwf	??_isr,w
  4314  0140  1D03               	skipz
  4315  0141  2944               	goto	u150_25
  4316  0142  3010               	movlw	16
  4317  0143  0278               	subwf	_cnt_bit,w
  4318  0144                     u150_25:	
  4319  0144  1803               	skipnc
  4320  0145  2947               	goto	u150_21
  4321  0146  2948               	goto	u150_20
  4322  0147                     u150_21:	
  4323  0147  2964               	goto	i1l1722
  4324  0148                     u150_20:	
  4325  0148                     i1l1718:	
  4326  0148  0879               	movf	_cnt_bit+1,w
  4327  0149  3A80               	xorlw	128
  4328  014A  00F1               	movwf	??_isr
  4329  014B  3080               	movlw	128
  4330  014C  0271               	subwf	??_isr,w
  4331  014D  1D03               	skipz
  4332  014E  2951               	goto	u151_25
  4333  014F  3008               	movlw	8
  4334  0150  0278               	subwf	_cnt_bit,w
  4335  0151                     u151_25:	
  4336  0151  1C03               	skipc
  4337  0152  2954               	goto	u151_21
  4338  0153  2955               	goto	u151_20
  4339  0154                     u151_21:	
  4340  0154  2964               	goto	i1l1722
  4341  0155                     u151_20:	
  4342  0155                     i1l1720:	
  4343                           
  4344                           ;main.c: 196:                         preReg2 |= 1 << (cnt_bit-8);
  4345  0155  3001               	movlw	1
  4346  0156  00F1               	movwf	??_isr
  4347  0157  0878               	movf	_cnt_bit,w
  4348  0158  3EF8               	addlw	-8
  4349  0159  0A89               	incf	9,f
  4350  015A  295C               	goto	u152_24
  4351  015B                     u152_25:	
  4352  015B  35F1               	lslf	??_isr,f
  4353  015C                     u152_24:	
  4354  015C  0B89               	decfsz	9,f
  4355  015D  295B               	goto	u152_25
  4356  015E  0871               	movf	??_isr,w
  4357  015F  00F2               	movwf	??_isr+1
  4358  0160  0872               	movf	??_isr+1,w
  4359  0161  0020               	movlb	0	; select bank0
  4360  0162  04E7               	iorwf	_preReg2,f
  4361  0163  2970               	goto	i1l1724
  4362  0164                     i1l1722:	
  4363                           
  4364                           ;main.c: 198:                         preReg1 |= 1 << cnt_bit;
  4365  0164  3001               	movlw	1
  4366  0165  00F1               	movwf	??_isr
  4367  0166  0A78               	incf	_cnt_bit,w
  4368  0167  2969               	goto	u153_24
  4369  0168                     u153_25:	
  4370  0168  35F1               	lslf	??_isr,f
  4371  0169                     u153_24:	
  4372  0169  0B89               	decfsz	9,f
  4373  016A  2968               	goto	u153_25
  4374  016B  0871               	movf	??_isr,w
  4375  016C  00F2               	movwf	??_isr+1
  4376  016D  0872               	movf	??_isr+1,w
  4377  016E  0020               	movlb	0	; select bank0
  4378  016F  04E8               	iorwf	_preReg1,f
  4379  0170                     i1l1724:	
  4380                           
  4381                           ;main.c: 200:                 T1CONbits.TMR1ON = 0;
  4382  0170  1018               	bcf	24,0	;volatile
  4383  0171                     i1l1726:	
  4384                           
  4385                           ;main.c: 201:                 cnt_bit--;
  4386  0171  30FF               	movlw	255
  4387  0172  07F8               	addwf	_cnt_bit,f
  4388  0173  30FF               	movlw	255
  4389  0174  3DF9               	addwfc	_cnt_bit+1,f
  4390  0175                     i1l1728:	
  4391                           
  4392                           ;main.c: 202:                 if(cnt_bit==-1)
  4393  0175  0A78               	incf	_cnt_bit,w
  4394  0176  1D03               	skipz
  4395  0177  297C               	goto	u154_21
  4396  0178  0A79               	incf	_cnt_bit+1,w
  4397  0179  1D03               	btfss	3,2
  4398  017A  297C               	goto	u154_21
  4399  017B  297D               	goto	u154_20
  4400  017C                     u154_21:	
  4401  017C  298F               	goto	i1l206
  4402  017D                     u154_20:	
  4403  017D                     i1l1730:	
  4404                           
  4405                           ;main.c: 203:                     state = 4;
  4406  017D  3004               	movlw	4
  4407  017E  00E2               	movwf	_state
  4408  017F  3000               	movlw	0
  4409  0180  00E3               	movwf	_state+1
  4410  0181  298F               	goto	i1l206
  4411  0182                     i1l1734:	
  4412                           
  4413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4414                           ; Switch size 1, requested type "simple"
  4415                           ; Number of cases is 1, Range of values is 0 to 0
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte            4     3 (average)
  4419                           ; direct_byte            8     6 (fixed)
  4420                           ; jumptable            260     6 (fixed)
  4421                           ;	Chosen strategy is simple_byte
  4422  0182  0863               	movf	_state+1,w
  4423  0183  3A00               	xorlw	0	; case 0
  4424  0184  1903               	skipnz
  4425  0185  2987               	goto	i1l2070
  4426  0186  298F               	goto	i1l206
  4427  0187                     i1l2070:	
  4428                           
  4429                           ; Switch size 1, requested type "simple"
  4430                           ; Number of cases is 2, Range of values is 0 to 3
  4431                           ; switch strategies available:
  4432                           ; Name         Instructions Cycles
  4433                           ; simple_byte            7     4 (average)
  4434                           ; direct_byte           14     6 (fixed)
  4435                           ; jumptable            260     6 (fixed)
  4436                           ;	Chosen strategy is simple_byte
  4437  0187  0862               	movf	_state,w
  4438  0188  3A00               	xorlw	0	; case 0
  4439  0189  1903               	skipnz
  4440  018A  28E5               	goto	i1l209
  4441  018B  3A03               	xorlw	3	; case 3
  4442  018C  1903               	skipnz
  4443  018D  28F2               	goto	i1l212
  4444  018E  298F               	goto	i1l206
  4445  018F                     i1l206:	
  4446                           
  4447                           ;main.c: 211:     INTCONbits.GIE = 1;
  4448  018F  178B               	bsf	11,7	;volatile
  4449  0190                     i1l222:	
  4450  0190  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4451  0191  0009               	retfie
  4452  0192                     __end_of_isr:	
  4453                           
  4454                           	psect	text16
  4455  04E5                     __ptext16:	
  4456 ;; *************** function _UpVol *****************
  4457 ;; Defined at:
  4458 ;;		line 226 in file "main.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;Total ram usage:        1 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_isr
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           
  4486                           ;psect for function _UpVol
  4487  04E5                     _UpVol:	
  4488  04E5                     i1l1538:	
  4489                           ;incstack = 0
  4490                           ; Regs used in _UpVol: [wreg+status,2+status,0]
  4491                           
  4492                           
  4493                           ;main.c: 228:     vol++;
  4494  04E5  3001               	movlw	1
  4495  04E6  00F0               	movwf	??_UpVol
  4496  04E7  0870               	movf	??_UpVol,w
  4497  04E8  07FA               	addwf	_vol,f
  4498  04E9                     i1l1540:	
  4499                           
  4500                           ;main.c: 229:     if(vol >= 97)
  4501  04E9  3061               	movlw	97
  4502  04EA  027A               	subwf	_vol,w
  4503  04EB  1C03               	skipc
  4504  04EC  2CEE               	goto	u120_21
  4505  04ED  2CEF               	goto	u120_20
  4506  04EE                     u120_21:	
  4507  04EE  2CF5               	goto	i1l1544
  4508  04EF                     u120_20:	
  4509  04EF                     i1l1542:	
  4510                           
  4511                           ;main.c: 230:         vol_lcd+=10;
  4512  04EF  300A               	movlw	10
  4513  04F0  0020               	movlb	0	; select bank0
  4514  04F1  07A0               	addwf	_vol_lcd,f
  4515  04F2  3000               	movlw	0
  4516  04F3  3DA1               	addwfc	_vol_lcd+1,f
  4517  04F4  2CFA               	goto	i1l236
  4518  04F5                     i1l1544:	
  4519                           
  4520                           ;main.c: 232:         vol_lcd+=5;
  4521  04F5  3005               	movlw	5
  4522  04F6  0020               	movlb	0	; select bank0
  4523  04F7  07A0               	addwf	_vol_lcd,f
  4524  04F8  3000               	movlw	0
  4525  04F9  3DA1               	addwfc	_vol_lcd+1,f
  4526  04FA                     i1l236:	
  4527  04FA  0008               	return
  4528  04FB                     __end_of_UpVol:	
  4529                           
  4530                           	psect	text17
  4531  050F                     __ptext17:	
  4532 ;; *************** function _DownVol *****************
  4533 ;; Defined at:
  4534 ;;		line 235 in file "main.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_isr
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _DownVol
  4563  050F                     _DownVol:	
  4564  050F                     i1l1546:	
  4565                           ;incstack = 0
  4566                           ; Regs used in _DownVol: [wreg+status,2+status,0]
  4567                           
  4568                           
  4569                           ;main.c: 237:     vol--;
  4570  050F  3001               	movlw	1
  4571  0510  02FA               	subwf	_vol,f
  4572  0511                     i1l1548:	
  4573                           
  4574                           ;main.c: 238:     if(vol >= 96)
  4575  0511  3060               	movlw	96
  4576  0512  027A               	subwf	_vol,w
  4577  0513  1C03               	skipc
  4578  0514  2D16               	goto	u121_21
  4579  0515  2D17               	goto	u121_20
  4580  0516                     u121_21:	
  4581  0516  2D1D               	goto	i1l1552
  4582  0517                     u121_20:	
  4583  0517                     i1l1550:	
  4584                           
  4585                           ;main.c: 239:         vol_lcd-=10;
  4586  0517  30F6               	movlw	246
  4587  0518  0020               	movlb	0	; select bank0
  4588  0519  07A0               	addwf	_vol_lcd,f
  4589  051A  30FF               	movlw	255
  4590  051B  3DA1               	addwfc	_vol_lcd+1,f
  4591  051C  2D22               	goto	i1l241
  4592  051D                     i1l1552:	
  4593                           
  4594                           ;main.c: 241:         vol_lcd-=5;
  4595  051D  30FB               	movlw	251
  4596  051E  0020               	movlb	0	; select bank0
  4597  051F  07A0               	addwf	_vol_lcd,f
  4598  0520  30FF               	movlw	255
  4599  0521  3DA1               	addwfc	_vol_lcd+1,f
  4600  0522                     i1l241:	
  4601  0522  0008               	return
  4602  0523                     __end_of_DownVol:	
  4603  007E                     btemp	set	126	;btemp
  4604  007E                     int$flags	set	126
  4605  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        45
    BSS         7
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     24      73
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    lcd_str@buf	PTR unsigned char  size(1) Largest target is 16
		 -> Buffer(BANK0[16]), Mute(BANK0[16]), StMsg(BANK0[8]), 

    itostring@buffer	PTR unsigned char  size(1) Largest target is 16
		 -> Buffer(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_clear
    _main->_lcd_str
    _lcd_str->_lcd_data
    _lcd_data->_lcd_out
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_out
    _itostring->___awdiv
    _itostring->___awmod

Critical Paths under _isr in COMMON

    _isr->_UpVol

Critical Paths under _main in BANK0

    _main->_itostring
    _itostring->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6891
                                             23 BANK0      1     1      0
                  _SYSTEM_Initialize
                             _SetVol
                          _itostring
                          _lcd_clear
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              2     2      0    1017
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0     844
                                              5 COMMON     2     2      0
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    1626
                                              0 BANK0      2     2      0
                            _lcd_cmd
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0     844
                                              7 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     844
                                              5 COMMON     2     2      0
                            _lcd_out
 ---------------------------------------------------------------------------------
 (3) _lcd_out                                              2     1      1     782
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _itostring                                           19    14      5    2440
                                              4 BANK0     19    14      5
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SetVol                                               2     1      1     120
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                            _DownVol
                              _UpVol
 ---------------------------------------------------------------------------------
 (5) _UpVol                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DownVol                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _SetVol
   _itostring
     ___awdiv
     ___awmod
   _lcd_clear
     _lcd_cmd
       _lcd_out
   _lcd_cmd
     _lcd_out
   _lcd_init
     _lcd_cmd
       _lcd_out
     _lcd_out
   _lcd_str
     _lcd_data
       _lcd_out

 _isr (ROOT)
   _DownVol
   _UpVol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      54      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      54      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 27 15:40:02 2020

                   lcd_data@asci 0076                      __CFG_CP$OFF 0000                               l22 0553  
                             l25 055D                               l19 054B                               l72 0498  
                   ___awdiv@sign 004B                      __CFG_LVP$ON 0000                              l230 050C  
                            l231 050E                              l225 0502                              l228 0508  
                            l245 01E5                              l262 0530                              l270 04B5  
                            l503 0335                              l263 0532                              l264 0534  
                            l273 0541                              l282 03F1                              l259 02D5  
                            l267 04E4                              l516 0445                              l279 04CD  
                            u810 02DC                              u811 02DB                              u900 032C  
                            u820 02E7                              u901 032B                              u821 02E6  
                            u830 02F8                              u831 02F7                              u850 0308  
                            u851 0307                              u845 02FC                              u870 0317  
                            u871 0316                              u865 0309                              u890 0327  
                            u891 0326                              u875 0313                              u885 031D  
                            _isr 0004                              _vol 007A                     ___awmod@sign 004B  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                   __CFG_ZCD$OFF 0000                             l2000 036F                             l2002 0373  
                           l2004 0379                             l2006 037E                             l1320 047D  
                           l1330 048F                             l1322 047E                             l1314 0470  
                           l1340 054F                             l1332 0491                             l1324 0484  
                           l1316 0474                             l1342 0550                             l1334 0494  
                           l1326 048A                             l1318 0477                             l1344 0551  
                           l1336 0496                             l1328 048D                             l1360 02DC  
                           l1338 054C                             l1346 055A                             l1370 02F0  
                           l1362 02E1                             l1380 0304                             l1372 02F2  
                           l1364 02E3                             l1356 02D6                             l1438 0542  
                           l1470 0506                             l1390 0321                             l1382 0308  
                           l1374 02F8                             l1366 02E7                             l1358 02D8  
                           l1384 0317                             l1376 02FB                             l1392 0327  
                           l1368 02EC                             l1466 04FC                             l1394 032C  
                           l1386 031B                             l1378 0300                             l1810 0528  
                           l1468 04FE                             l1396 0331                             l1388 031C  
                           l1900 01F7                             l1812 052D                             l1820 04E0  
                           l1830 03FF                             l1822 03F2                             l1910 022C  
                           l1902 01FA                             l1814 049A                             l1840 0416  
                           l1832 0403                             l1824 03F4                             l1920 0251  
                           l1912 0232                             l1904 020A                             l1808 0524  
                           l1816 04AD                             l1850 0431                             l1842 041A  
                           l1834 0408                             l1826 03F8                             l1930 0275  
                           l1922 0259                             l1914 023B                             l1906 021A  
                           l1818 04CF                             l1844 041E                             l1836 040E  
                           l1852 0437                             l1828 03FD                             l1932 027B  
                           l1924 025F                             l1940 0294                             l1916 0241  
                           l1908 021C                             l1860 0395                             l1854 043C  
                           l1846 0428                             l1838 0411                             l1950 02C8  
                           l1942 02A4                             l1934 0282                             l1926 0269  
                           l1918 024B                             l1870 03CE                             l1862 03A1  
                           l1856 0441                             l1848 042C                             l1944 02AC  
                           l1936 0288                             l1928 026F                             l1872 03D4  
                           l1864 03A7                             l1880 04B9                             l1960 0341  
                           l1952 0336                             l1946 02B4                             l1938 028F  
                           l1890 01C4                             l1874 0535                             l1866 03B6  
                           l1882 04C0                             l1970 034C                             l1962 0344  
                           l1954 0339                             l1948 02C4                             l1892 01CB  
                           l1876 0539                             l1868 03BF                             l1884 04C5  
                           l1980 0352                             l1972 034E                             l1964 0346  
                           l1956 033C                             l1894 01D3                             l1886 01B7  
                           l1878 04B8                             l1990 035A                             l1982 0353  
                           l1974 034F                             l1966 0348                             l1958 033F  
                           l1896 01D9                             l1888 01C0                             l1992 035C  
                           l1984 0354                             l1976 0350                             l1968 034A  
                           l1994 035F                             l1986 0357                             l1978 0351  
                           l1996 0362                             l1988 0358                             l1998 0366  
                           ?_isr 0070                      lcd_out@code 0074                             u1010 0506  
                           u1011 0505                             u1020 050C                             u1021 050B  
                    lcd_out@flag 0073                             _LATA 010C                             _LATB 010D  
                           _LATC 010E                             u1600 040E                             u1601 040D  
                           u1620 041E                             u1700 01F6                             u1621 041D  
                           u1701 01F5                             u1630 0428                             u1710 021A  
                           u1550 052D                             u1631 0427                             u1615 0412  
                           u1711 0219                             u1551 052C                             u1800 0275  
                           u1720 022C                             u1801 0274                             u1721 022B  
                           u1705 01F2                             u1650 0437                             u1810 027B  
                           u1730 0232                             u1651 0436                             u1635 0424  
                           u1811 027A                             u1731 0231                             u1715 0216  
                           u1660 043C                             u1580 03F8                             u1820 0288  
                           u1740 0241                             u1661 043B                             u1645 042D  
                           u1581 03F7                             u1821 0287                             u1741 0240  
                           u1725 0228                             u1565 04A5                             u1590 0403  
                           u1830 02A4                             u1750 024B                             u1670 04CD  
                           u1591 0402                             u1831 02A3                             u1751 024A  
                           u1575 04D8                             u1671 04CC                             u1840 02D5  
                           u1760 0251                             u1680 01CB                             u1841 02D4  
                           u1761 0250                             u1681 01CA                             u1770 025F  
                           u1690 01D9                             u1850 0379                             u1835 02A0  
                           u1771 025E                             u1755 0247                             u1691 01D8  
                           u1907 03C9                             u1851 0378                             u1780 0269  
                           u1845 02D1                             u1781 0268                             u1917 03D8  
                           u1790 026F                             u1791 026E                             u1927 053C  
                           u1785 0265                             u1937 04B0                             u1867 04E1  
                           u1877 039B                             u1887 03AB                             u1897 03BA  
                           _TMR1 0016                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _Mute 0022                             _main 0336                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0192                    __CFG_MCLRE$ON 0000                  __end_of_DownVol 0523  
                          ??_isr 0071   __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 0554  
                          ?_main 0070                  __end_of___awdiv 0336                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 0446                  ___awdiv@divisor 0073                            _T1CON 0018  
                          _IOCAF 0393                            _IOCCF 0399                            i1l212 00F2  
                          i1l222 0190                            i1l206 018F                            i1l241 0522  
                          i1l209 00E5                            i1l236 04FA                            i1l182 001B  
                          i1l192 0046                            i1l187 00DE                            i1l189 0034  
                ___awdiv@counter 004A                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            _StMsg 0042                  __end_of_lcd_cmd 04B6  
                          _UpVol 04E5                  __end_of_lcd_out 0535                  __end_of_lcd_str 04CE  
                 _WDT_Initialize 055A                            _state 0062                            status 0003  
                          wtemp0 007E                  __initialization 0194                     __end_of_main 0395  
                 __CFG_LPBOR$OFF 0000                           ??_main 0061                   __CFG_PLLEN$OFF 0000  
         __end_of_WDT_Initialize 055E                           ?_UpVol 0070                 ___awdiv@dividend 0075  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _BORCON 021D                           _RA2PPS 0E92                           _RC5PPS 0EA5  
                         i1l2070 0187                           u120_20 04EF                           u120_21 04EE  
                         _ODCONA 028C                           i1l1610 0006                           _ODCONB 028D  
                         _ODCONC 028E                           i1l1540 04E9                           i1l1700 00EA  
                         i1l2068 00CD                           i1l1620 0024                           i1l1612 000C  
                         i1l1550 0517                           i1l1542 04EF                           i1l1710 0112  
                         i1l1702 00EE                           i1l1630 003A                           i1l1622 0029  
                         i1l1614 0012                           i1l1552 051D                           u121_20 0517  
                         i1l1544 04F5                           i1l1720 0155                           i1l1712 011F  
                         i1l1704 00F0                           i1l1640 0047                           i1l1632 003E  
                         i1l1616 0017                           i1l1624 002C                           u121_21 0516  
                         i1l1546 050F                           i1l1538 04E5                           i1l1730 017D  
                         i1l1722 0164                           i1l1714 012C                           i1l1706 00F6  
                         i1l1650 0069                           i1l1642 0050                           i1l1634 0040  
                         i1l1626 002E                           i1l1618 001F                           i1l1548 0511  
                         i1l1716 013B                           i1l1708 0103                           i1l1724 0170  
                         i1l1652 006D                           i1l1644 0059                           i1l1660 007F  
                         i1l1636 0041                           i1l1628 0032                           i1l1726 0171  
                         i1l1718 0148                           i1l1734 0182                           i1l1670 009C  
                         i1l1662 0088                           i1l1654 0073                           i1l1646 005D  
                         i1l1638 0044                           i1l1728 0175                           i1l1680 00AE  
                         i1l1672 00A0                           i1l1664 008B                           i1l1656 0078  
                         i1l1648 0063                           u130_20 0050                           u130_21 004F  
                         i1l1682 00B4                           i1l1674 00A2                           i1l1666 0091  
                         i1l1658 007B                           i1l1676 00A6                           i1l1668 0098  
                         i1l1686 00BB                           i1l1678 00A8                           i1l1688 00C1  
                         u131_20 0059                           i1l1696 00C7                           u123_20 000C  
                         u131_21 0058                           u123_21 000B                           i1l1698 00E3  
                         u140_20 00C1                           u132_20 0063                           u124_20 0012  
                         u140_21 00C0                           u132_21 0062                           u124_21 0011  
                         u141_20 00C6                           u133_20 0069                           u125_20 0017  
                         u141_21 00C5                           u133_21 0068                           u125_21 0016  
                         u150_20 0148                           u142_20 00E3                           u134_20 0073  
                         u126_20 001F                           u150_21 0147                           u142_21 00E2  
                         u134_21 0072                           u126_21 001E                           u150_25 0144  
                         u151_20 0155                           u143_20 00EA                           u135_20 0078  
                         u127_20 0024                           u151_21 0154                           u143_21 00E9  
                         u135_21 0077                           u127_21 0023                           u151_25 0151  
                         u144_20 00F6                           u136_20 0088                           u128_20 0029  
                         u144_21 00F5                           u136_21 0087                           u128_21 0028  
                         _INLVLA 038C                           _INLVLB 038D                           _INLVLC 038E  
                         u152_24 015C                           u152_25 015B                           u145_20 0103  
                         u137_20 0098                           u129_20 0032                           _INTCON 000B  
                         u145_21 0102                           u137_21 0097                           u129_21 0031  
                         u153_24 0169                           u153_25 0168                           u145_25 00FF  
                         u154_20 017D                           u138_20 00B4                           u154_21 017C  
                         u138_21 00B3                           u146_24 010A                           u146_25 0109  
                         u147_20 011F                           u139_20 00BA                           u147_21 011E  
                         u139_21 00B9                           u147_25 011B                           u148_20 012C  
                         u148_21 012B                           u148_25 0128                           u149_24 0133  
                         u149_25 0132                           _OSCCON 0099                           _WDTCON 0097  
                      ??_DownVol 0070                           _Buffer 0032                   __CFG_PWRTE$OFF 0000  
                         _SetVol 04FB                 __end_of_lcd_data 04E5                 __end_of_lcd_init 03F2  
                      ??___awdiv 0077                   __CFG_STVREN$ON 0000                        ??___awmod 0077  
               ___awdiv@quotient 004C                  ___awmod@divisor 0073                  ___awmod@counter 004A  
                      ??_lcd_cmd 0075                        ??_lcd_out 0074                        ??_lcd_str 0077  
                   __pdataCOMMON 0078                  ?_WDT_Initialize 0070                _SYSTEM_Initialize 0542  
        __end_of__initialization 01B3               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
                  __end_of_UpVol 04FB                     __pidataBANK0 0446              ??_SYSTEM_Initialize 0073  
                 _OPTION_REGbits 0095               __size_of_lcd_clear 000D                          ??_UpVol 0070  
      __end_of_SYSTEM_Initialize 054C                       __pbssBANK0 0062                          ?_SetVol 0073  
                     __pmaintext 0336                  __CFG_PPS1WAY$ON 0000                       __pintentry 0004  
             __size_of_itostring 011F                   itostring@flag1 005B                   itostring@flag2 0057  
                 itostring@flag3 0055                   itostring@flag4 005D                   itostring@digit 004E  
                        _OSCSTAT 009A                          _OSCTUNE 0098                          _SLRCONA 030C  
                        _SLRCONB 030D                          _SLRCONC 030E                          _SSP1BUF 0211  
                      ?_lcd_data 0070                        ?_lcd_init 0070                          _DownVol 050F  
              __end_of_lcd_clear 0542                  __size_of_SetVol 0014                          ___awdiv 02D6  
                        ___awmod 03F2                          _dataReg 0064                          __ptext1 04B6  
                        __ptext2 04CE                          __ptext3 0395                          __ptext4 0535  
                        __ptext5 0499                          __ptext6 0523                          __ptext7 01B7  
                        __ptext8 03F2                          __ptext9 02D6                          _lcd_cmd 0499  
                        _cnt_bit 0078                          _lcd_out 0523                          _lcd_str 04B6  
                      _T1CONbits 0018            _OSCILLATOR_Initialize 054C                     __size_of_isr 018E  
               ___awmod@dividend 0075                          _preReg1 0068                          _preReg2 0067  
                        _preReg3 0066                          _preReg4 0065         ??_PIN_MANAGER_Initialize 0073  
                      _IOCAFbits 0393                        _IOCCFbits 0399                        _IOCAPbits 0391  
                      _IOCCNbits 0398                        _IOCCPbits 0397                          _vol_lcd 0020  
                     ??_lcd_data 0075       __size_of_SYSTEM_Initialize 000A                       ??_lcd_init 004A  
           end_of_initialization 01B3                          init_ram 0554                __end_of_itostring 02D6  
                        initloop 0555                   SetVol@vol_data 0073                 ??_WDT_Initialize 0073  
                      _PORTAbits 000C                        _PORTCbits 000E                        _SSPCLKPPS 0E20  
               __CFG_FOSC$INTOSC 0000                       lcd_cmd@cmd 0076                       lcd_str@buf 004A  
                 __end_of_SetVol 050F                    __pidataCOMMON 055E           ?_OSCILLATOR_Initialize 0070  
            start_initialization 0194  __size_of_PIN_MANAGER_Initialize 0029                      __end_of_isr 0192  
                       ??_SetVol 0074                      __pdataBANK0 0020                        ___latbits 0002  
                  __pcstackBANK0 004A                __size_of_lcd_data 0017                __size_of_lcd_init 005D  
                       ?_DownVol 0070           _PIN_MANAGER_Initialize 0470                         ?___awdiv 0073  
                       ?___awmod 0073                    itostring@data 0050                        _lcd_clear 0535  
                       ?_lcd_cmd 0070                         ?_lcd_out 0073                         ?_lcd_str 0070  
                 __size_of_UpVol 0016                       itostring@i 005F                       itostring@x 0059  
                itostring@buffer 0052                         _PIE1bits 0091                        _itostring 01B7  
                       _PIR1bits 0011                         _SSP1CON1 0215                       ?_lcd_clear 0070  
                       _SSPSSPPS 0E22                         SetVol@ch 0074                 __size_of_DownVol 0014  
                     ?_itostring 004E          ??_OSCILLATOR_Initialize 0073                 __size_of___awdiv 0060  
               __size_of___awmod 0054                 __size_of_lcd_cmd 001D                 __size_of_lcd_out 0012  
               __size_of_lcd_str 0018                         __ptext10 04FB                         __ptext11 0542  
                       __ptext12 055A                         __ptext13 0470                         __ptext14 054C  
                       __ptext16 04E5                         __ptext17 050F                         _lcd_data 04CE  
                       _lcd_init 0395                    __size_of_main 005F                         int$flags 007E  
                    ??_lcd_clear 0077                     _SSP1STATbits 0214                       _INTCONbits 000B  
        __size_of_WDT_Initialize 0004                         intlevel1 0000          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      ??_itostring 0053   __end_of_PIN_MANAGER_Initialize 0499  
